// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemEducationArticleBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Chip chipCategory;

  @NonNull
  public final ImageView imageViewArticle;

  @NonNull
  public final TextView textViewArticleSubtitle;

  @NonNull
  public final TextView textViewArticleTitle;

  private ItemEducationArticleBinding(@NonNull MaterialCardView rootView,
      @NonNull Chip chipCategory, @NonNull ImageView imageViewArticle,
      @NonNull TextView textViewArticleSubtitle, @NonNull TextView textViewArticleTitle) {
    this.rootView = rootView;
    this.chipCategory = chipCategory;
    this.imageViewArticle = imageViewArticle;
    this.textViewArticleSubtitle = textViewArticleSubtitle;
    this.textViewArticleTitle = textViewArticleTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemEducationArticleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemEducationArticleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_education_article, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemEducationArticleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chipCategory;
      Chip chipCategory = ViewBindings.findChildViewById(rootView, id);
      if (chipCategory == null) {
        break missingId;
      }

      id = R.id.imageViewArticle;
      ImageView imageViewArticle = ViewBindings.findChildViewById(rootView, id);
      if (imageViewArticle == null) {
        break missingId;
      }

      id = R.id.textViewArticleSubtitle;
      TextView textViewArticleSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewArticleSubtitle == null) {
        break missingId;
      }

      id = R.id.textViewArticleTitle;
      TextView textViewArticleTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewArticleTitle == null) {
        break missingId;
      }

      return new ItemEducationArticleBinding((MaterialCardView) rootView, chipCategory,
          imageViewArticle, textViewArticleSubtitle, textViewArticleTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
