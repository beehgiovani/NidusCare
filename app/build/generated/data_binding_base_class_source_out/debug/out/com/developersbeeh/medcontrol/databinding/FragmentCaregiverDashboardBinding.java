// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.developersbeeh.medcontrol.ui.common.StateLayout;
import com.google.android.gms.ads.AdView;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCaregiverDashboardBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AdView adView;

  @NonNull
  public final MaterialCardView cardPendingInvites;

  @NonNull
  public final LinearLayout contentLayout;

  @NonNull
  public final FloatingActionButton fabAddDependent;

  @NonNull
  public final LinearProgressIndicator progressSummaryDoses;

  @NonNull
  public final RecyclerView recyclerViewDependents;

  @NonNull
  public final RecyclerView recyclerViewPendingInvites;

  @NonNull
  public final StateLayout stateLayout;

  @NonNull
  public final MaterialCardView summaryCard;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final TextView textViewSummaryAppointments;

  @NonNull
  public final TextView textViewSummaryDosesLate;

  @NonNull
  public final TextView textViewSummaryDosesToday;

  @NonNull
  public final TextView textViewSummaryNextDose;

  @NonNull
  public final TextView textViewSummaryTitle;

  private FragmentCaregiverDashboardBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AdView adView, @NonNull MaterialCardView cardPendingInvites,
      @NonNull LinearLayout contentLayout, @NonNull FloatingActionButton fabAddDependent,
      @NonNull LinearProgressIndicator progressSummaryDoses,
      @NonNull RecyclerView recyclerViewDependents,
      @NonNull RecyclerView recyclerViewPendingInvites, @NonNull StateLayout stateLayout,
      @NonNull MaterialCardView summaryCard, @NonNull SwipeRefreshLayout swipeRefreshLayout,
      @NonNull TextView textViewSummaryAppointments, @NonNull TextView textViewSummaryDosesLate,
      @NonNull TextView textViewSummaryDosesToday, @NonNull TextView textViewSummaryNextDose,
      @NonNull TextView textViewSummaryTitle) {
    this.rootView = rootView;
    this.adView = adView;
    this.cardPendingInvites = cardPendingInvites;
    this.contentLayout = contentLayout;
    this.fabAddDependent = fabAddDependent;
    this.progressSummaryDoses = progressSummaryDoses;
    this.recyclerViewDependents = recyclerViewDependents;
    this.recyclerViewPendingInvites = recyclerViewPendingInvites;
    this.stateLayout = stateLayout;
    this.summaryCard = summaryCard;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.textViewSummaryAppointments = textViewSummaryAppointments;
    this.textViewSummaryDosesLate = textViewSummaryDosesLate;
    this.textViewSummaryDosesToday = textViewSummaryDosesToday;
    this.textViewSummaryNextDose = textViewSummaryNextDose;
    this.textViewSummaryTitle = textViewSummaryTitle;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCaregiverDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCaregiverDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_caregiver_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCaregiverDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adView;
      AdView adView = ViewBindings.findChildViewById(rootView, id);
      if (adView == null) {
        break missingId;
      }

      id = R.id.cardPendingInvites;
      MaterialCardView cardPendingInvites = ViewBindings.findChildViewById(rootView, id);
      if (cardPendingInvites == null) {
        break missingId;
      }

      id = R.id.contentLayout;
      LinearLayout contentLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLayout == null) {
        break missingId;
      }

      id = R.id.fabAddDependent;
      FloatingActionButton fabAddDependent = ViewBindings.findChildViewById(rootView, id);
      if (fabAddDependent == null) {
        break missingId;
      }

      id = R.id.progressSummaryDoses;
      LinearProgressIndicator progressSummaryDoses = ViewBindings.findChildViewById(rootView, id);
      if (progressSummaryDoses == null) {
        break missingId;
      }

      id = R.id.recyclerViewDependents;
      RecyclerView recyclerViewDependents = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewDependents == null) {
        break missingId;
      }

      id = R.id.recyclerViewPendingInvites;
      RecyclerView recyclerViewPendingInvites = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewPendingInvites == null) {
        break missingId;
      }

      id = R.id.stateLayout;
      StateLayout stateLayout = ViewBindings.findChildViewById(rootView, id);
      if (stateLayout == null) {
        break missingId;
      }

      id = R.id.summaryCard;
      MaterialCardView summaryCard = ViewBindings.findChildViewById(rootView, id);
      if (summaryCard == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.textViewSummaryAppointments;
      TextView textViewSummaryAppointments = ViewBindings.findChildViewById(rootView, id);
      if (textViewSummaryAppointments == null) {
        break missingId;
      }

      id = R.id.textViewSummaryDosesLate;
      TextView textViewSummaryDosesLate = ViewBindings.findChildViewById(rootView, id);
      if (textViewSummaryDosesLate == null) {
        break missingId;
      }

      id = R.id.textViewSummaryDosesToday;
      TextView textViewSummaryDosesToday = ViewBindings.findChildViewById(rootView, id);
      if (textViewSummaryDosesToday == null) {
        break missingId;
      }

      id = R.id.textViewSummaryNextDose;
      TextView textViewSummaryNextDose = ViewBindings.findChildViewById(rootView, id);
      if (textViewSummaryNextDose == null) {
        break missingId;
      }

      id = R.id.textViewSummaryTitle;
      TextView textViewSummaryTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewSummaryTitle == null) {
        break missingId;
      }

      return new FragmentCaregiverDashboardBinding((CoordinatorLayout) rootView, adView,
          cardPendingInvites, contentLayout, fabAddDependent, progressSummaryDoses,
          recyclerViewDependents, recyclerViewPendingInvites, stateLayout, summaryCard,
          swipeRefreshLayout, textViewSummaryAppointments, textViewSummaryDosesLate,
          textViewSummaryDosesToday, textViewSummaryNextDose, textViewSummaryTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
