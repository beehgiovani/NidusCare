// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.divider.MaterialDivider;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CaregiverDashboardItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final LinearLayout adherenceSection;

  @NonNull
  public final LinearLayout appointmentTodayLayout;

  @NonNull
  public final MaterialCardView cardViewDependent;

  @NonNull
  public final Group detailsGroup;

  @NonNull
  public final MaterialDivider divider;

  @NonNull
  public final FrameLayout frameAdherence;

  @NonNull
  public final LinearLayout horizontalDetailsLayout;

  @NonNull
  public final ImageView iconAppointmentToday;

  @NonNull
  public final ImageView iconLowStock;

  @NonNull
  public final ShapeableImageView imageViewAvatar;

  @NonNull
  public final ImageView imageViewExpandCollapse;

  @NonNull
  public final ImageView imageViewInsightIcon;

  @NonNull
  public final ImageView imageViewStreakIcon;

  @NonNull
  public final MaterialCardView insightPreviewCard;

  @NonNull
  public final TextView labelAppointmentToday;

  @NonNull
  public final TextView labelLowStock;

  @NonNull
  public final LinearLayout lowStockLayout;

  @NonNull
  public final ConstraintLayout mainContentLayout;

  @NonNull
  public final ProgressBar progressAdherence;

  @NonNull
  public final LinearProgressIndicator progressToday;

  @NonNull
  public final View statusBar;

  @NonNull
  public final LinearLayout statusIndicatorsLayout;

  @NonNull
  public final LinearLayout streakLayout;

  @NonNull
  public final TextView textViewAdherenceLabel;

  @NonNull
  public final TextView textViewAdherencePercentage;

  @NonNull
  public final TextView textViewAgeAndSex;

  @NonNull
  public final TextView textViewDependentName;

  @NonNull
  public final TextView textViewInsightCount;

  @NonNull
  public final TextView textViewInsightPreview;

  @NonNull
  public final TextView textViewInsightTitle;

  @NonNull
  public final TextView textViewNextDose;

  @NonNull
  public final TextView textViewStreakCount;

  @NonNull
  public final TextView textViewTodayProgressLabel;

  private CaregiverDashboardItemBinding(@NonNull MaterialCardView rootView,
      @NonNull LinearLayout adherenceSection, @NonNull LinearLayout appointmentTodayLayout,
      @NonNull MaterialCardView cardViewDependent, @NonNull Group detailsGroup,
      @NonNull MaterialDivider divider, @NonNull FrameLayout frameAdherence,
      @NonNull LinearLayout horizontalDetailsLayout, @NonNull ImageView iconAppointmentToday,
      @NonNull ImageView iconLowStock, @NonNull ShapeableImageView imageViewAvatar,
      @NonNull ImageView imageViewExpandCollapse, @NonNull ImageView imageViewInsightIcon,
      @NonNull ImageView imageViewStreakIcon, @NonNull MaterialCardView insightPreviewCard,
      @NonNull TextView labelAppointmentToday, @NonNull TextView labelLowStock,
      @NonNull LinearLayout lowStockLayout, @NonNull ConstraintLayout mainContentLayout,
      @NonNull ProgressBar progressAdherence, @NonNull LinearProgressIndicator progressToday,
      @NonNull View statusBar, @NonNull LinearLayout statusIndicatorsLayout,
      @NonNull LinearLayout streakLayout, @NonNull TextView textViewAdherenceLabel,
      @NonNull TextView textViewAdherencePercentage, @NonNull TextView textViewAgeAndSex,
      @NonNull TextView textViewDependentName, @NonNull TextView textViewInsightCount,
      @NonNull TextView textViewInsightPreview, @NonNull TextView textViewInsightTitle,
      @NonNull TextView textViewNextDose, @NonNull TextView textViewStreakCount,
      @NonNull TextView textViewTodayProgressLabel) {
    this.rootView = rootView;
    this.adherenceSection = adherenceSection;
    this.appointmentTodayLayout = appointmentTodayLayout;
    this.cardViewDependent = cardViewDependent;
    this.detailsGroup = detailsGroup;
    this.divider = divider;
    this.frameAdherence = frameAdherence;
    this.horizontalDetailsLayout = horizontalDetailsLayout;
    this.iconAppointmentToday = iconAppointmentToday;
    this.iconLowStock = iconLowStock;
    this.imageViewAvatar = imageViewAvatar;
    this.imageViewExpandCollapse = imageViewExpandCollapse;
    this.imageViewInsightIcon = imageViewInsightIcon;
    this.imageViewStreakIcon = imageViewStreakIcon;
    this.insightPreviewCard = insightPreviewCard;
    this.labelAppointmentToday = labelAppointmentToday;
    this.labelLowStock = labelLowStock;
    this.lowStockLayout = lowStockLayout;
    this.mainContentLayout = mainContentLayout;
    this.progressAdherence = progressAdherence;
    this.progressToday = progressToday;
    this.statusBar = statusBar;
    this.statusIndicatorsLayout = statusIndicatorsLayout;
    this.streakLayout = streakLayout;
    this.textViewAdherenceLabel = textViewAdherenceLabel;
    this.textViewAdherencePercentage = textViewAdherencePercentage;
    this.textViewAgeAndSex = textViewAgeAndSex;
    this.textViewDependentName = textViewDependentName;
    this.textViewInsightCount = textViewInsightCount;
    this.textViewInsightPreview = textViewInsightPreview;
    this.textViewInsightTitle = textViewInsightTitle;
    this.textViewNextDose = textViewNextDose;
    this.textViewStreakCount = textViewStreakCount;
    this.textViewTodayProgressLabel = textViewTodayProgressLabel;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CaregiverDashboardItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CaregiverDashboardItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.caregiver_dashboard_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CaregiverDashboardItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adherenceSection;
      LinearLayout adherenceSection = ViewBindings.findChildViewById(rootView, id);
      if (adherenceSection == null) {
        break missingId;
      }

      id = R.id.appointmentTodayLayout;
      LinearLayout appointmentTodayLayout = ViewBindings.findChildViewById(rootView, id);
      if (appointmentTodayLayout == null) {
        break missingId;
      }

      MaterialCardView cardViewDependent = (MaterialCardView) rootView;

      id = R.id.detailsGroup;
      Group detailsGroup = ViewBindings.findChildViewById(rootView, id);
      if (detailsGroup == null) {
        break missingId;
      }

      id = R.id.divider;
      MaterialDivider divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.frameAdherence;
      FrameLayout frameAdherence = ViewBindings.findChildViewById(rootView, id);
      if (frameAdherence == null) {
        break missingId;
      }

      id = R.id.horizontalDetailsLayout;
      LinearLayout horizontalDetailsLayout = ViewBindings.findChildViewById(rootView, id);
      if (horizontalDetailsLayout == null) {
        break missingId;
      }

      id = R.id.iconAppointmentToday;
      ImageView iconAppointmentToday = ViewBindings.findChildViewById(rootView, id);
      if (iconAppointmentToday == null) {
        break missingId;
      }

      id = R.id.iconLowStock;
      ImageView iconLowStock = ViewBindings.findChildViewById(rootView, id);
      if (iconLowStock == null) {
        break missingId;
      }

      id = R.id.imageViewAvatar;
      ShapeableImageView imageViewAvatar = ViewBindings.findChildViewById(rootView, id);
      if (imageViewAvatar == null) {
        break missingId;
      }

      id = R.id.imageViewExpandCollapse;
      ImageView imageViewExpandCollapse = ViewBindings.findChildViewById(rootView, id);
      if (imageViewExpandCollapse == null) {
        break missingId;
      }

      id = R.id.imageViewInsightIcon;
      ImageView imageViewInsightIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageViewInsightIcon == null) {
        break missingId;
      }

      id = R.id.imageViewStreakIcon;
      ImageView imageViewStreakIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageViewStreakIcon == null) {
        break missingId;
      }

      id = R.id.insightPreviewCard;
      MaterialCardView insightPreviewCard = ViewBindings.findChildViewById(rootView, id);
      if (insightPreviewCard == null) {
        break missingId;
      }

      id = R.id.labelAppointmentToday;
      TextView labelAppointmentToday = ViewBindings.findChildViewById(rootView, id);
      if (labelAppointmentToday == null) {
        break missingId;
      }

      id = R.id.labelLowStock;
      TextView labelLowStock = ViewBindings.findChildViewById(rootView, id);
      if (labelLowStock == null) {
        break missingId;
      }

      id = R.id.lowStockLayout;
      LinearLayout lowStockLayout = ViewBindings.findChildViewById(rootView, id);
      if (lowStockLayout == null) {
        break missingId;
      }

      id = R.id.mainContentLayout;
      ConstraintLayout mainContentLayout = ViewBindings.findChildViewById(rootView, id);
      if (mainContentLayout == null) {
        break missingId;
      }

      id = R.id.progressAdherence;
      ProgressBar progressAdherence = ViewBindings.findChildViewById(rootView, id);
      if (progressAdherence == null) {
        break missingId;
      }

      id = R.id.progressToday;
      LinearProgressIndicator progressToday = ViewBindings.findChildViewById(rootView, id);
      if (progressToday == null) {
        break missingId;
      }

      id = R.id.statusBar;
      View statusBar = ViewBindings.findChildViewById(rootView, id);
      if (statusBar == null) {
        break missingId;
      }

      id = R.id.statusIndicatorsLayout;
      LinearLayout statusIndicatorsLayout = ViewBindings.findChildViewById(rootView, id);
      if (statusIndicatorsLayout == null) {
        break missingId;
      }

      id = R.id.streakLayout;
      LinearLayout streakLayout = ViewBindings.findChildViewById(rootView, id);
      if (streakLayout == null) {
        break missingId;
      }

      id = R.id.textViewAdherenceLabel;
      TextView textViewAdherenceLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewAdherenceLabel == null) {
        break missingId;
      }

      id = R.id.textViewAdherencePercentage;
      TextView textViewAdherencePercentage = ViewBindings.findChildViewById(rootView, id);
      if (textViewAdherencePercentage == null) {
        break missingId;
      }

      id = R.id.textViewAgeAndSex;
      TextView textViewAgeAndSex = ViewBindings.findChildViewById(rootView, id);
      if (textViewAgeAndSex == null) {
        break missingId;
      }

      id = R.id.textViewDependentName;
      TextView textViewDependentName = ViewBindings.findChildViewById(rootView, id);
      if (textViewDependentName == null) {
        break missingId;
      }

      id = R.id.textViewInsightCount;
      TextView textViewInsightCount = ViewBindings.findChildViewById(rootView, id);
      if (textViewInsightCount == null) {
        break missingId;
      }

      id = R.id.textViewInsightPreview;
      TextView textViewInsightPreview = ViewBindings.findChildViewById(rootView, id);
      if (textViewInsightPreview == null) {
        break missingId;
      }

      id = R.id.textViewInsightTitle;
      TextView textViewInsightTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewInsightTitle == null) {
        break missingId;
      }

      id = R.id.textViewNextDose;
      TextView textViewNextDose = ViewBindings.findChildViewById(rootView, id);
      if (textViewNextDose == null) {
        break missingId;
      }

      id = R.id.textViewStreakCount;
      TextView textViewStreakCount = ViewBindings.findChildViewById(rootView, id);
      if (textViewStreakCount == null) {
        break missingId;
      }

      id = R.id.textViewTodayProgressLabel;
      TextView textViewTodayProgressLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewTodayProgressLabel == null) {
        break missingId;
      }

      return new CaregiverDashboardItemBinding((MaterialCardView) rootView, adherenceSection,
          appointmentTodayLayout, cardViewDependent, detailsGroup, divider, frameAdherence,
          horizontalDetailsLayout, iconAppointmentToday, iconLowStock, imageViewAvatar,
          imageViewExpandCollapse, imageViewInsightIcon, imageViewStreakIcon, insightPreviewCard,
          labelAppointmentToday, labelLowStock, lowStockLayout, mainContentLayout,
          progressAdherence, progressToday, statusBar, statusIndicatorsLayout, streakLayout,
          textViewAdherenceLabel, textViewAdherencePercentage, textViewAgeAndSex,
          textViewDependentName, textViewInsightCount, textViewInsightPreview, textViewInsightTitle,
          textViewNextDose, textViewStreakCount, textViewTodayProgressLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
