// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddLoteBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText editTextLoteQuantidade;

  @NonNull
  public final TextInputEditText editTextLoteValidade;

  @NonNull
  public final TextInputLayout tilLoteQuantidade;

  @NonNull
  public final TextInputLayout tilLoteValidade;

  private DialogAddLoteBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputEditText editTextLoteQuantidade,
      @NonNull TextInputEditText editTextLoteValidade, @NonNull TextInputLayout tilLoteQuantidade,
      @NonNull TextInputLayout tilLoteValidade) {
    this.rootView = rootView;
    this.editTextLoteQuantidade = editTextLoteQuantidade;
    this.editTextLoteValidade = editTextLoteValidade;
    this.tilLoteQuantidade = tilLoteQuantidade;
    this.tilLoteValidade = tilLoteValidade;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddLoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddLoteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_lote, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddLoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editTextLoteQuantidade;
      TextInputEditText editTextLoteQuantidade = ViewBindings.findChildViewById(rootView, id);
      if (editTextLoteQuantidade == null) {
        break missingId;
      }

      id = R.id.editTextLoteValidade;
      TextInputEditText editTextLoteValidade = ViewBindings.findChildViewById(rootView, id);
      if (editTextLoteValidade == null) {
        break missingId;
      }

      id = R.id.tilLoteQuantidade;
      TextInputLayout tilLoteQuantidade = ViewBindings.findChildViewById(rootView, id);
      if (tilLoteQuantidade == null) {
        break missingId;
      }

      id = R.id.tilLoteValidade;
      TextInputLayout tilLoteValidade = ViewBindings.findChildViewById(rootView, id);
      if (tilLoteValidade == null) {
        break missingId;
      }

      return new DialogAddLoteBinding((LinearLayout) rootView, editTextLoteQuantidade,
          editTextLoteValidade, tilLoteQuantidade, tilLoteValidade);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
