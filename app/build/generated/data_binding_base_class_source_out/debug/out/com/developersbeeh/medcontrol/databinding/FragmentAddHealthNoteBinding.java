// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddHealthNoteBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final AutoCompleteTextView autoCompleteNoteType;

  @NonNull
  public final MaterialButton buttonCancel;

  @NonNull
  public final MaterialButton buttonSaveNote;

  @NonNull
  public final LinearLayout dynamicInputLayout;

  @NonNull
  public final TextInputEditText editTextBloodSugar;

  @NonNull
  public final TextInputEditText editTextDiastolic;

  @NonNull
  public final TextInputEditText editTextGeneralNote;

  @NonNull
  public final TextInputEditText editTextHeartRate;

  @NonNull
  public final TextInputEditText editTextNote;

  @NonNull
  public final TextInputEditText editTextSystolic;

  @NonNull
  public final TextInputEditText editTextTemperature;

  @NonNull
  public final TextInputEditText editTextWeight;

  @NonNull
  public final LinearLayout layoutBloodPressure;

  @NonNull
  public final TextInputLayout tilBloodSugar;

  @NonNull
  public final TextInputLayout tilDiastolic;

  @NonNull
  public final TextInputLayout tilGeneralNote;

  @NonNull
  public final TextInputLayout tilHeartRate;

  @NonNull
  public final TextInputLayout tilNote;

  @NonNull
  public final TextInputLayout tilNoteType;

  @NonNull
  public final TextInputLayout tilSystolic;

  @NonNull
  public final TextInputLayout tilTemperature;

  @NonNull
  public final TextInputLayout tilWeight;

  private FragmentAddHealthNoteBinding(@NonNull ScrollView rootView,
      @NonNull AutoCompleteTextView autoCompleteNoteType, @NonNull MaterialButton buttonCancel,
      @NonNull MaterialButton buttonSaveNote, @NonNull LinearLayout dynamicInputLayout,
      @NonNull TextInputEditText editTextBloodSugar, @NonNull TextInputEditText editTextDiastolic,
      @NonNull TextInputEditText editTextGeneralNote, @NonNull TextInputEditText editTextHeartRate,
      @NonNull TextInputEditText editTextNote, @NonNull TextInputEditText editTextSystolic,
      @NonNull TextInputEditText editTextTemperature, @NonNull TextInputEditText editTextWeight,
      @NonNull LinearLayout layoutBloodPressure, @NonNull TextInputLayout tilBloodSugar,
      @NonNull TextInputLayout tilDiastolic, @NonNull TextInputLayout tilGeneralNote,
      @NonNull TextInputLayout tilHeartRate, @NonNull TextInputLayout tilNote,
      @NonNull TextInputLayout tilNoteType, @NonNull TextInputLayout tilSystolic,
      @NonNull TextInputLayout tilTemperature, @NonNull TextInputLayout tilWeight) {
    this.rootView = rootView;
    this.autoCompleteNoteType = autoCompleteNoteType;
    this.buttonCancel = buttonCancel;
    this.buttonSaveNote = buttonSaveNote;
    this.dynamicInputLayout = dynamicInputLayout;
    this.editTextBloodSugar = editTextBloodSugar;
    this.editTextDiastolic = editTextDiastolic;
    this.editTextGeneralNote = editTextGeneralNote;
    this.editTextHeartRate = editTextHeartRate;
    this.editTextNote = editTextNote;
    this.editTextSystolic = editTextSystolic;
    this.editTextTemperature = editTextTemperature;
    this.editTextWeight = editTextWeight;
    this.layoutBloodPressure = layoutBloodPressure;
    this.tilBloodSugar = tilBloodSugar;
    this.tilDiastolic = tilDiastolic;
    this.tilGeneralNote = tilGeneralNote;
    this.tilHeartRate = tilHeartRate;
    this.tilNote = tilNote;
    this.tilNoteType = tilNoteType;
    this.tilSystolic = tilSystolic;
    this.tilTemperature = tilTemperature;
    this.tilWeight = tilWeight;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddHealthNoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddHealthNoteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_health_note, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddHealthNoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoCompleteNoteType;
      AutoCompleteTextView autoCompleteNoteType = ViewBindings.findChildViewById(rootView, id);
      if (autoCompleteNoteType == null) {
        break missingId;
      }

      id = R.id.buttonCancel;
      MaterialButton buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.buttonSaveNote;
      MaterialButton buttonSaveNote = ViewBindings.findChildViewById(rootView, id);
      if (buttonSaveNote == null) {
        break missingId;
      }

      id = R.id.dynamicInputLayout;
      LinearLayout dynamicInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (dynamicInputLayout == null) {
        break missingId;
      }

      id = R.id.editTextBloodSugar;
      TextInputEditText editTextBloodSugar = ViewBindings.findChildViewById(rootView, id);
      if (editTextBloodSugar == null) {
        break missingId;
      }

      id = R.id.editTextDiastolic;
      TextInputEditText editTextDiastolic = ViewBindings.findChildViewById(rootView, id);
      if (editTextDiastolic == null) {
        break missingId;
      }

      id = R.id.editTextGeneralNote;
      TextInputEditText editTextGeneralNote = ViewBindings.findChildViewById(rootView, id);
      if (editTextGeneralNote == null) {
        break missingId;
      }

      id = R.id.editTextHeartRate;
      TextInputEditText editTextHeartRate = ViewBindings.findChildViewById(rootView, id);
      if (editTextHeartRate == null) {
        break missingId;
      }

      id = R.id.editTextNote;
      TextInputEditText editTextNote = ViewBindings.findChildViewById(rootView, id);
      if (editTextNote == null) {
        break missingId;
      }

      id = R.id.editTextSystolic;
      TextInputEditText editTextSystolic = ViewBindings.findChildViewById(rootView, id);
      if (editTextSystolic == null) {
        break missingId;
      }

      id = R.id.editTextTemperature;
      TextInputEditText editTextTemperature = ViewBindings.findChildViewById(rootView, id);
      if (editTextTemperature == null) {
        break missingId;
      }

      id = R.id.editTextWeight;
      TextInputEditText editTextWeight = ViewBindings.findChildViewById(rootView, id);
      if (editTextWeight == null) {
        break missingId;
      }

      id = R.id.layoutBloodPressure;
      LinearLayout layoutBloodPressure = ViewBindings.findChildViewById(rootView, id);
      if (layoutBloodPressure == null) {
        break missingId;
      }

      id = R.id.tilBloodSugar;
      TextInputLayout tilBloodSugar = ViewBindings.findChildViewById(rootView, id);
      if (tilBloodSugar == null) {
        break missingId;
      }

      id = R.id.tilDiastolic;
      TextInputLayout tilDiastolic = ViewBindings.findChildViewById(rootView, id);
      if (tilDiastolic == null) {
        break missingId;
      }

      id = R.id.tilGeneralNote;
      TextInputLayout tilGeneralNote = ViewBindings.findChildViewById(rootView, id);
      if (tilGeneralNote == null) {
        break missingId;
      }

      id = R.id.tilHeartRate;
      TextInputLayout tilHeartRate = ViewBindings.findChildViewById(rootView, id);
      if (tilHeartRate == null) {
        break missingId;
      }

      id = R.id.tilNote;
      TextInputLayout tilNote = ViewBindings.findChildViewById(rootView, id);
      if (tilNote == null) {
        break missingId;
      }

      id = R.id.tilNoteType;
      TextInputLayout tilNoteType = ViewBindings.findChildViewById(rootView, id);
      if (tilNoteType == null) {
        break missingId;
      }

      id = R.id.tilSystolic;
      TextInputLayout tilSystolic = ViewBindings.findChildViewById(rootView, id);
      if (tilSystolic == null) {
        break missingId;
      }

      id = R.id.tilTemperature;
      TextInputLayout tilTemperature = ViewBindings.findChildViewById(rootView, id);
      if (tilTemperature == null) {
        break missingId;
      }

      id = R.id.tilWeight;
      TextInputLayout tilWeight = ViewBindings.findChildViewById(rootView, id);
      if (tilWeight == null) {
        break missingId;
      }

      return new FragmentAddHealthNoteBinding((ScrollView) rootView, autoCompleteNoteType,
          buttonCancel, buttonSaveNote, dynamicInputLayout, editTextBloodSugar, editTextDiastolic,
          editTextGeneralNote, editTextHeartRate, editTextNote, editTextSystolic,
          editTextTemperature, editTextWeight, layoutBloodPressure, tilBloodSugar, tilDiastolic,
          tilGeneralNote, tilHeartRate, tilNote, tilNoteType, tilSystolic, tilTemperature,
          tilWeight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
