// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemArchivedMedicationBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final LinearLayout actionsLayout;

  @NonNull
  public final MaterialButton buttonPrimaryAction;

  @NonNull
  public final MaterialButton buttonSecondaryAction;

  @NonNull
  public final TextView textViewArchiveReason;

  @NonNull
  public final TextView textViewMedicationName;

  private ItemArchivedMedicationBinding(@NonNull MaterialCardView rootView,
      @NonNull LinearLayout actionsLayout, @NonNull MaterialButton buttonPrimaryAction,
      @NonNull MaterialButton buttonSecondaryAction, @NonNull TextView textViewArchiveReason,
      @NonNull TextView textViewMedicationName) {
    this.rootView = rootView;
    this.actionsLayout = actionsLayout;
    this.buttonPrimaryAction = buttonPrimaryAction;
    this.buttonSecondaryAction = buttonSecondaryAction;
    this.textViewArchiveReason = textViewArchiveReason;
    this.textViewMedicationName = textViewMedicationName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemArchivedMedicationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemArchivedMedicationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_archived_medication, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemArchivedMedicationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionsLayout;
      LinearLayout actionsLayout = ViewBindings.findChildViewById(rootView, id);
      if (actionsLayout == null) {
        break missingId;
      }

      id = R.id.buttonPrimaryAction;
      MaterialButton buttonPrimaryAction = ViewBindings.findChildViewById(rootView, id);
      if (buttonPrimaryAction == null) {
        break missingId;
      }

      id = R.id.buttonSecondaryAction;
      MaterialButton buttonSecondaryAction = ViewBindings.findChildViewById(rootView, id);
      if (buttonSecondaryAction == null) {
        break missingId;
      }

      id = R.id.textViewArchiveReason;
      TextView textViewArchiveReason = ViewBindings.findChildViewById(rootView, id);
      if (textViewArchiveReason == null) {
        break missingId;
      }

      id = R.id.textViewMedicationName;
      TextView textViewMedicationName = ViewBindings.findChildViewById(rootView, id);
      if (textViewMedicationName == null) {
        break missingId;
      }

      return new ItemArchivedMedicationBinding((MaterialCardView) rootView, actionsLayout,
          buttonPrimaryAction, buttonSecondaryAction, textViewArchiveReason,
          textViewMedicationName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
