// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCaregiverBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton buttonRemoveCaregiver;

  @NonNull
  public final ImageView imageViewAvatar;

  @NonNull
  public final TextView textViewCaregiverEmail;

  @NonNull
  public final TextView textViewCaregiverName;

  private ItemCaregiverBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton buttonRemoveCaregiver, @NonNull ImageView imageViewAvatar,
      @NonNull TextView textViewCaregiverEmail, @NonNull TextView textViewCaregiverName) {
    this.rootView = rootView;
    this.buttonRemoveCaregiver = buttonRemoveCaregiver;
    this.imageViewAvatar = imageViewAvatar;
    this.textViewCaregiverEmail = textViewCaregiverEmail;
    this.textViewCaregiverName = textViewCaregiverName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCaregiverBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCaregiverBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_caregiver, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCaregiverBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonRemoveCaregiver;
      ImageButton buttonRemoveCaregiver = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveCaregiver == null) {
        break missingId;
      }

      id = R.id.imageViewAvatar;
      ImageView imageViewAvatar = ViewBindings.findChildViewById(rootView, id);
      if (imageViewAvatar == null) {
        break missingId;
      }

      id = R.id.textViewCaregiverEmail;
      TextView textViewCaregiverEmail = ViewBindings.findChildViewById(rootView, id);
      if (textViewCaregiverEmail == null) {
        break missingId;
      }

      id = R.id.textViewCaregiverName;
      TextView textViewCaregiverName = ViewBindings.findChildViewById(rootView, id);
      if (textViewCaregiverName == null) {
        break missingId;
      }

      return new ItemCaregiverBinding((LinearLayout) rootView, buttonRemoveCaregiver,
          imageViewAvatar, textViewCaregiverEmail, textViewCaregiverName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
