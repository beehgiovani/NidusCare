// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPharmacySelectionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView adBanner;

  @NonNull
  public final Chip chip10km;

  @NonNull
  public final Chip chip1km;

  @NonNull
  public final Chip chip2km;

  @NonNull
  public final Chip chip5km;

  @NonNull
  public final ChipGroup chipGroupDistance;

  @NonNull
  public final HorizontalScrollView filtersScrollView;

  @NonNull
  public final LayoutErrorStateBinding layoutError;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final RecyclerView recyclerViewPharmacies;

  @NonNull
  public final TextView textViewSubtitle;

  @NonNull
  public final TextView textViewTitle;

  private FragmentPharmacySelectionBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView adBanner, @NonNull Chip chip10km, @NonNull Chip chip1km,
      @NonNull Chip chip2km, @NonNull Chip chip5km, @NonNull ChipGroup chipGroupDistance,
      @NonNull HorizontalScrollView filtersScrollView, @NonNull LayoutErrorStateBinding layoutError,
      @NonNull LinearProgressIndicator progressBar, @NonNull RecyclerView recyclerViewPharmacies,
      @NonNull TextView textViewSubtitle, @NonNull TextView textViewTitle) {
    this.rootView = rootView;
    this.adBanner = adBanner;
    this.chip10km = chip10km;
    this.chip1km = chip1km;
    this.chip2km = chip2km;
    this.chip5km = chip5km;
    this.chipGroupDistance = chipGroupDistance;
    this.filtersScrollView = filtersScrollView;
    this.layoutError = layoutError;
    this.progressBar = progressBar;
    this.recyclerViewPharmacies = recyclerViewPharmacies;
    this.textViewSubtitle = textViewSubtitle;
    this.textViewTitle = textViewTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPharmacySelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPharmacySelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_pharmacy_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPharmacySelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adBanner;
      MaterialCardView adBanner = ViewBindings.findChildViewById(rootView, id);
      if (adBanner == null) {
        break missingId;
      }

      id = R.id.chip_10km;
      Chip chip10km = ViewBindings.findChildViewById(rootView, id);
      if (chip10km == null) {
        break missingId;
      }

      id = R.id.chip_1km;
      Chip chip1km = ViewBindings.findChildViewById(rootView, id);
      if (chip1km == null) {
        break missingId;
      }

      id = R.id.chip_2km;
      Chip chip2km = ViewBindings.findChildViewById(rootView, id);
      if (chip2km == null) {
        break missingId;
      }

      id = R.id.chip_5km;
      Chip chip5km = ViewBindings.findChildViewById(rootView, id);
      if (chip5km == null) {
        break missingId;
      }

      id = R.id.chipGroupDistance;
      ChipGroup chipGroupDistance = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupDistance == null) {
        break missingId;
      }

      id = R.id.filtersScrollView;
      HorizontalScrollView filtersScrollView = ViewBindings.findChildViewById(rootView, id);
      if (filtersScrollView == null) {
        break missingId;
      }

      id = R.id.layout_error;
      View layoutError = ViewBindings.findChildViewById(rootView, id);
      if (layoutError == null) {
        break missingId;
      }
      LayoutErrorStateBinding binding_layoutError = LayoutErrorStateBinding.bind(layoutError);

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerViewPharmacies;
      RecyclerView recyclerViewPharmacies = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewPharmacies == null) {
        break missingId;
      }

      id = R.id.textViewSubtitle;
      TextView textViewSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewSubtitle == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      return new FragmentPharmacySelectionBinding((ConstraintLayout) rootView, adBanner, chip10km,
          chip1km, chip2km, chip5km, chipGroupDistance, filtersScrollView, binding_layoutError,
          progressBar, recyclerViewPharmacies, textViewSubtitle, textViewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
