// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MedicamentoItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final LinearLayout actionsLayout;

  @NonNull
  public final LinearLayout adherenceGroup;

  @NonNull
  public final LinearLayout anotacoesLayout;

  @NonNull
  public final ImageButton buttonArchive;

  @NonNull
  public final MaterialButton buttonDelete;

  @NonNull
  public final MaterialButton buttonEdit;

  @NonNull
  public final MaterialButton buttonMarkAsTaken;

  @NonNull
  public final MaterialButton buttonMarkAsTakenDetail;

  @NonNull
  public final MaterialButton buttonPausePlay;

  @NonNull
  public final ImageButton buttonQuickRefill;

  @NonNull
  public final MaterialButton buttonRefill;

  @NonNull
  public final MaterialButton buttonSkip;

  @NonNull
  public final Barrier contentBarrier;

  @NonNull
  public final LinearLayout detailsLayout;

  @NonNull
  public final LinearLayout estoqueLayout;

  @NonNull
  public final ImageView iconStatus;

  @NonNull
  public final ImageView iconTipoMedicamento;

  @NonNull
  public final ImageView imageViewExpandCollapse;

  @NonNull
  public final LinearLayout mainInfoLayout;

  @NonNull
  public final LinearProgressIndicator progressAdherence;

  @NonNull
  public final LinearProgressIndicator progressEstoque;

  @NonNull
  public final LinearLayout statusLayout;

  @NonNull
  public final TextView textViewAdherence;

  @NonNull
  public final TextView textViewAnotacoes;

  @NonNull
  public final TextView textViewDosagem;

  @NonNull
  public final TextView textViewDuracao;

  @NonNull
  public final TextView textViewEstoque;

  @NonNull
  public final TextView textViewFrequenciaHorario;

  @NonNull
  public final TextView textViewNome;

  @NonNull
  public final TextView textViewOverdoseWarning;

  @NonNull
  public final TextView textViewProximoLocal;

  @NonNull
  public final TextView textViewStatus;

  @NonNull
  public final TextView textViewUltimoLocal;

  @NonNull
  public final TextView textViewValidadeProxima;

  private MedicamentoItemBinding(@NonNull MaterialCardView rootView,
      @NonNull LinearLayout actionsLayout, @NonNull LinearLayout adherenceGroup,
      @NonNull LinearLayout anotacoesLayout, @NonNull ImageButton buttonArchive,
      @NonNull MaterialButton buttonDelete, @NonNull MaterialButton buttonEdit,
      @NonNull MaterialButton buttonMarkAsTaken, @NonNull MaterialButton buttonMarkAsTakenDetail,
      @NonNull MaterialButton buttonPausePlay, @NonNull ImageButton buttonQuickRefill,
      @NonNull MaterialButton buttonRefill, @NonNull MaterialButton buttonSkip,
      @NonNull Barrier contentBarrier, @NonNull LinearLayout detailsLayout,
      @NonNull LinearLayout estoqueLayout, @NonNull ImageView iconStatus,
      @NonNull ImageView iconTipoMedicamento, @NonNull ImageView imageViewExpandCollapse,
      @NonNull LinearLayout mainInfoLayout, @NonNull LinearProgressIndicator progressAdherence,
      @NonNull LinearProgressIndicator progressEstoque, @NonNull LinearLayout statusLayout,
      @NonNull TextView textViewAdherence, @NonNull TextView textViewAnotacoes,
      @NonNull TextView textViewDosagem, @NonNull TextView textViewDuracao,
      @NonNull TextView textViewEstoque, @NonNull TextView textViewFrequenciaHorario,
      @NonNull TextView textViewNome, @NonNull TextView textViewOverdoseWarning,
      @NonNull TextView textViewProximoLocal, @NonNull TextView textViewStatus,
      @NonNull TextView textViewUltimoLocal, @NonNull TextView textViewValidadeProxima) {
    this.rootView = rootView;
    this.actionsLayout = actionsLayout;
    this.adherenceGroup = adherenceGroup;
    this.anotacoesLayout = anotacoesLayout;
    this.buttonArchive = buttonArchive;
    this.buttonDelete = buttonDelete;
    this.buttonEdit = buttonEdit;
    this.buttonMarkAsTaken = buttonMarkAsTaken;
    this.buttonMarkAsTakenDetail = buttonMarkAsTakenDetail;
    this.buttonPausePlay = buttonPausePlay;
    this.buttonQuickRefill = buttonQuickRefill;
    this.buttonRefill = buttonRefill;
    this.buttonSkip = buttonSkip;
    this.contentBarrier = contentBarrier;
    this.detailsLayout = detailsLayout;
    this.estoqueLayout = estoqueLayout;
    this.iconStatus = iconStatus;
    this.iconTipoMedicamento = iconTipoMedicamento;
    this.imageViewExpandCollapse = imageViewExpandCollapse;
    this.mainInfoLayout = mainInfoLayout;
    this.progressAdherence = progressAdherence;
    this.progressEstoque = progressEstoque;
    this.statusLayout = statusLayout;
    this.textViewAdherence = textViewAdherence;
    this.textViewAnotacoes = textViewAnotacoes;
    this.textViewDosagem = textViewDosagem;
    this.textViewDuracao = textViewDuracao;
    this.textViewEstoque = textViewEstoque;
    this.textViewFrequenciaHorario = textViewFrequenciaHorario;
    this.textViewNome = textViewNome;
    this.textViewOverdoseWarning = textViewOverdoseWarning;
    this.textViewProximoLocal = textViewProximoLocal;
    this.textViewStatus = textViewStatus;
    this.textViewUltimoLocal = textViewUltimoLocal;
    this.textViewValidadeProxima = textViewValidadeProxima;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static MedicamentoItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MedicamentoItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.medicamento_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MedicamentoItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionsLayout;
      LinearLayout actionsLayout = ViewBindings.findChildViewById(rootView, id);
      if (actionsLayout == null) {
        break missingId;
      }

      id = R.id.adherenceGroup;
      LinearLayout adherenceGroup = ViewBindings.findChildViewById(rootView, id);
      if (adherenceGroup == null) {
        break missingId;
      }

      id = R.id.anotacoesLayout;
      LinearLayout anotacoesLayout = ViewBindings.findChildViewById(rootView, id);
      if (anotacoesLayout == null) {
        break missingId;
      }

      id = R.id.buttonArchive;
      ImageButton buttonArchive = ViewBindings.findChildViewById(rootView, id);
      if (buttonArchive == null) {
        break missingId;
      }

      id = R.id.buttonDelete;
      MaterialButton buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.buttonEdit;
      MaterialButton buttonEdit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEdit == null) {
        break missingId;
      }

      id = R.id.buttonMarkAsTaken;
      MaterialButton buttonMarkAsTaken = ViewBindings.findChildViewById(rootView, id);
      if (buttonMarkAsTaken == null) {
        break missingId;
      }

      id = R.id.buttonMarkAsTaken_detail;
      MaterialButton buttonMarkAsTakenDetail = ViewBindings.findChildViewById(rootView, id);
      if (buttonMarkAsTakenDetail == null) {
        break missingId;
      }

      id = R.id.buttonPausePlay;
      MaterialButton buttonPausePlay = ViewBindings.findChildViewById(rootView, id);
      if (buttonPausePlay == null) {
        break missingId;
      }

      id = R.id.buttonQuickRefill;
      ImageButton buttonQuickRefill = ViewBindings.findChildViewById(rootView, id);
      if (buttonQuickRefill == null) {
        break missingId;
      }

      id = R.id.buttonRefill;
      MaterialButton buttonRefill = ViewBindings.findChildViewById(rootView, id);
      if (buttonRefill == null) {
        break missingId;
      }

      id = R.id.buttonSkip;
      MaterialButton buttonSkip = ViewBindings.findChildViewById(rootView, id);
      if (buttonSkip == null) {
        break missingId;
      }

      id = R.id.contentBarrier;
      Barrier contentBarrier = ViewBindings.findChildViewById(rootView, id);
      if (contentBarrier == null) {
        break missingId;
      }

      id = R.id.detailsLayout;
      LinearLayout detailsLayout = ViewBindings.findChildViewById(rootView, id);
      if (detailsLayout == null) {
        break missingId;
      }

      id = R.id.estoqueLayout;
      LinearLayout estoqueLayout = ViewBindings.findChildViewById(rootView, id);
      if (estoqueLayout == null) {
        break missingId;
      }

      id = R.id.iconStatus;
      ImageView iconStatus = ViewBindings.findChildViewById(rootView, id);
      if (iconStatus == null) {
        break missingId;
      }

      id = R.id.iconTipoMedicamento;
      ImageView iconTipoMedicamento = ViewBindings.findChildViewById(rootView, id);
      if (iconTipoMedicamento == null) {
        break missingId;
      }

      id = R.id.imageViewExpandCollapse;
      ImageView imageViewExpandCollapse = ViewBindings.findChildViewById(rootView, id);
      if (imageViewExpandCollapse == null) {
        break missingId;
      }

      id = R.id.mainInfoLayout;
      LinearLayout mainInfoLayout = ViewBindings.findChildViewById(rootView, id);
      if (mainInfoLayout == null) {
        break missingId;
      }

      id = R.id.progressAdherence;
      LinearProgressIndicator progressAdherence = ViewBindings.findChildViewById(rootView, id);
      if (progressAdherence == null) {
        break missingId;
      }

      id = R.id.progressEstoque;
      LinearProgressIndicator progressEstoque = ViewBindings.findChildViewById(rootView, id);
      if (progressEstoque == null) {
        break missingId;
      }

      id = R.id.statusLayout;
      LinearLayout statusLayout = ViewBindings.findChildViewById(rootView, id);
      if (statusLayout == null) {
        break missingId;
      }

      id = R.id.textViewAdherence;
      TextView textViewAdherence = ViewBindings.findChildViewById(rootView, id);
      if (textViewAdherence == null) {
        break missingId;
      }

      id = R.id.textViewAnotacoes;
      TextView textViewAnotacoes = ViewBindings.findChildViewById(rootView, id);
      if (textViewAnotacoes == null) {
        break missingId;
      }

      id = R.id.textViewDosagem;
      TextView textViewDosagem = ViewBindings.findChildViewById(rootView, id);
      if (textViewDosagem == null) {
        break missingId;
      }

      id = R.id.textViewDuracao;
      TextView textViewDuracao = ViewBindings.findChildViewById(rootView, id);
      if (textViewDuracao == null) {
        break missingId;
      }

      id = R.id.textViewEstoque;
      TextView textViewEstoque = ViewBindings.findChildViewById(rootView, id);
      if (textViewEstoque == null) {
        break missingId;
      }

      id = R.id.textViewFrequenciaHorario;
      TextView textViewFrequenciaHorario = ViewBindings.findChildViewById(rootView, id);
      if (textViewFrequenciaHorario == null) {
        break missingId;
      }

      id = R.id.textViewNome;
      TextView textViewNome = ViewBindings.findChildViewById(rootView, id);
      if (textViewNome == null) {
        break missingId;
      }

      id = R.id.textViewOverdoseWarning;
      TextView textViewOverdoseWarning = ViewBindings.findChildViewById(rootView, id);
      if (textViewOverdoseWarning == null) {
        break missingId;
      }

      id = R.id.textViewProximoLocal;
      TextView textViewProximoLocal = ViewBindings.findChildViewById(rootView, id);
      if (textViewProximoLocal == null) {
        break missingId;
      }

      id = R.id.textViewStatus;
      TextView textViewStatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewStatus == null) {
        break missingId;
      }

      id = R.id.textViewUltimoLocal;
      TextView textViewUltimoLocal = ViewBindings.findChildViewById(rootView, id);
      if (textViewUltimoLocal == null) {
        break missingId;
      }

      id = R.id.textViewValidadeProxima;
      TextView textViewValidadeProxima = ViewBindings.findChildViewById(rootView, id);
      if (textViewValidadeProxima == null) {
        break missingId;
      }

      return new MedicamentoItemBinding((MaterialCardView) rootView, actionsLayout, adherenceGroup,
          anotacoesLayout, buttonArchive, buttonDelete, buttonEdit, buttonMarkAsTaken,
          buttonMarkAsTakenDetail, buttonPausePlay, buttonQuickRefill, buttonRefill, buttonSkip,
          contentBarrier, detailsLayout, estoqueLayout, iconStatus, iconTipoMedicamento,
          imageViewExpandCollapse, mainInfoLayout, progressAdherence, progressEstoque, statusLayout,
          textViewAdherence, textViewAnotacoes, textViewDosagem, textViewDuracao, textViewEstoque,
          textViewFrequenciaHorario, textViewNome, textViewOverdoseWarning, textViewProximoLocal,
          textViewStatus, textViewUltimoLocal, textViewValidadeProxima);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
