// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogRegisterVaccineBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText editTextLocation;

  @NonNull
  public final TextInputEditText editTextLot;

  @NonNull
  public final TextInputEditText editTextNotes;

  @NonNull
  public final TextInputLayout tilLocation;

  @NonNull
  public final TextInputLayout tilLot;

  @NonNull
  public final TextInputLayout tilNotes;

  private DialogRegisterVaccineBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputEditText editTextLocation, @NonNull TextInputEditText editTextLot,
      @NonNull TextInputEditText editTextNotes, @NonNull TextInputLayout tilLocation,
      @NonNull TextInputLayout tilLot, @NonNull TextInputLayout tilNotes) {
    this.rootView = rootView;
    this.editTextLocation = editTextLocation;
    this.editTextLot = editTextLot;
    this.editTextNotes = editTextNotes;
    this.tilLocation = tilLocation;
    this.tilLot = tilLot;
    this.tilNotes = tilNotes;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogRegisterVaccineBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogRegisterVaccineBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_register_vaccine, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogRegisterVaccineBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editTextLocation;
      TextInputEditText editTextLocation = ViewBindings.findChildViewById(rootView, id);
      if (editTextLocation == null) {
        break missingId;
      }

      id = R.id.editTextLot;
      TextInputEditText editTextLot = ViewBindings.findChildViewById(rootView, id);
      if (editTextLot == null) {
        break missingId;
      }

      id = R.id.editTextNotes;
      TextInputEditText editTextNotes = ViewBindings.findChildViewById(rootView, id);
      if (editTextNotes == null) {
        break missingId;
      }

      id = R.id.tilLocation;
      TextInputLayout tilLocation = ViewBindings.findChildViewById(rootView, id);
      if (tilLocation == null) {
        break missingId;
      }

      id = R.id.tilLot;
      TextInputLayout tilLot = ViewBindings.findChildViewById(rootView, id);
      if (tilLot == null) {
        break missingId;
      }

      id = R.id.tilNotes;
      TextInputLayout tilNotes = ViewBindings.findChildViewById(rootView, id);
      if (tilNotes == null) {
        break missingId;
      }

      return new DialogRegisterVaccineBinding((LinearLayout) rootView, editTextLocation,
          editTextLot, editTextNotes, tilLocation, tilLot, tilNotes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
