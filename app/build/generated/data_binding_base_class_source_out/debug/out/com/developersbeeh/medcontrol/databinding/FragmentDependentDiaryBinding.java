// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDependentDiaryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonSave;

  @NonNull
  public final ChipGroup chipGroupMood;

  @NonNull
  public final Chip chipMoodHappy;

  @NonNull
  public final Chip chipMoodNeutral;

  @NonNull
  public final Chip chipMoodSad;

  @NonNull
  public final TextInputEditText editTextNotes;

  @NonNull
  public final TextInputEditText editTextSymptoms;

  @NonNull
  public final TextView textViewSubtitle;

  @NonNull
  public final TextView textViewTitle;

  @NonNull
  public final TextInputLayout tilNotes;

  @NonNull
  public final TextInputLayout tilSymptoms;

  private FragmentDependentDiaryBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonSave, @NonNull ChipGroup chipGroupMood, @NonNull Chip chipMoodHappy,
      @NonNull Chip chipMoodNeutral, @NonNull Chip chipMoodSad,
      @NonNull TextInputEditText editTextNotes, @NonNull TextInputEditText editTextSymptoms,
      @NonNull TextView textViewSubtitle, @NonNull TextView textViewTitle,
      @NonNull TextInputLayout tilNotes, @NonNull TextInputLayout tilSymptoms) {
    this.rootView = rootView;
    this.buttonSave = buttonSave;
    this.chipGroupMood = chipGroupMood;
    this.chipMoodHappy = chipMoodHappy;
    this.chipMoodNeutral = chipMoodNeutral;
    this.chipMoodSad = chipMoodSad;
    this.editTextNotes = editTextNotes;
    this.editTextSymptoms = editTextSymptoms;
    this.textViewSubtitle = textViewSubtitle;
    this.textViewTitle = textViewTitle;
    this.tilNotes = tilNotes;
    this.tilSymptoms = tilSymptoms;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDependentDiaryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDependentDiaryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dependent_diary, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDependentDiaryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSave;
      Button buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.chipGroupMood;
      ChipGroup chipGroupMood = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupMood == null) {
        break missingId;
      }

      id = R.id.chipMoodHappy;
      Chip chipMoodHappy = ViewBindings.findChildViewById(rootView, id);
      if (chipMoodHappy == null) {
        break missingId;
      }

      id = R.id.chipMoodNeutral;
      Chip chipMoodNeutral = ViewBindings.findChildViewById(rootView, id);
      if (chipMoodNeutral == null) {
        break missingId;
      }

      id = R.id.chipMoodSad;
      Chip chipMoodSad = ViewBindings.findChildViewById(rootView, id);
      if (chipMoodSad == null) {
        break missingId;
      }

      id = R.id.editTextNotes;
      TextInputEditText editTextNotes = ViewBindings.findChildViewById(rootView, id);
      if (editTextNotes == null) {
        break missingId;
      }

      id = R.id.editTextSymptoms;
      TextInputEditText editTextSymptoms = ViewBindings.findChildViewById(rootView, id);
      if (editTextSymptoms == null) {
        break missingId;
      }

      id = R.id.textViewSubtitle;
      TextView textViewSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewSubtitle == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      id = R.id.tilNotes;
      TextInputLayout tilNotes = ViewBindings.findChildViewById(rootView, id);
      if (tilNotes == null) {
        break missingId;
      }

      id = R.id.tilSymptoms;
      TextInputLayout tilSymptoms = ViewBindings.findChildViewById(rootView, id);
      if (tilSymptoms == null) {
        break missingId;
      }

      return new FragmentDependentDiaryBinding((ConstraintLayout) rootView, buttonSave,
          chipGroupMood, chipMoodHappy, chipMoodNeutral, chipMoodSad, editTextNotes,
          editTextSymptoms, textViewSubtitle, textViewTitle, tilNotes, tilSymptoms);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
