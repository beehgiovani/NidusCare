// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.materialswitch.MaterialSwitch;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ReminderItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView imageViewDelete;

  @NonNull
  public final ImageView imageViewEdit;

  @NonNull
  public final MaterialSwitch switchReminder;

  @NonNull
  public final TextView textViewReminderTime;

  @NonNull
  public final TextView textViewReminderType;

  private ReminderItemBinding(@NonNull CardView rootView, @NonNull ImageView imageViewDelete,
      @NonNull ImageView imageViewEdit, @NonNull MaterialSwitch switchReminder,
      @NonNull TextView textViewReminderTime, @NonNull TextView textViewReminderType) {
    this.rootView = rootView;
    this.imageViewDelete = imageViewDelete;
    this.imageViewEdit = imageViewEdit;
    this.switchReminder = switchReminder;
    this.textViewReminderTime = textViewReminderTime;
    this.textViewReminderType = textViewReminderType;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ReminderItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReminderItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reminder_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReminderItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageViewDelete;
      ImageView imageViewDelete = ViewBindings.findChildViewById(rootView, id);
      if (imageViewDelete == null) {
        break missingId;
      }

      id = R.id.imageViewEdit;
      ImageView imageViewEdit = ViewBindings.findChildViewById(rootView, id);
      if (imageViewEdit == null) {
        break missingId;
      }

      id = R.id.switchReminder;
      MaterialSwitch switchReminder = ViewBindings.findChildViewById(rootView, id);
      if (switchReminder == null) {
        break missingId;
      }

      id = R.id.textViewReminderTime;
      TextView textViewReminderTime = ViewBindings.findChildViewById(rootView, id);
      if (textViewReminderTime == null) {
        break missingId;
      }

      id = R.id.textViewReminderType;
      TextView textViewReminderType = ViewBindings.findChildViewById(rootView, id);
      if (textViewReminderType == null) {
        break missingId;
      }

      return new ReminderItemBinding((CardView) rootView, imageViewDelete, imageViewEdit,
          switchReminder, textViewReminderTime, textViewReminderType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
