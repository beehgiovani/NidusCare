// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HealthNoteItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageButton buttonMenu;

  @NonNull
  public final ImageView imageViewIcon;

  @NonNull
  public final LinearLayout layoutBloodPressureValues;

  @NonNull
  public final LinearLayout layoutBloodSugarValue;

  @NonNull
  public final LinearLayout layoutHeartRateValue;

  @NonNull
  public final LinearLayout layoutMoodValue;

  @NonNull
  public final LinearLayout layoutSymptomValue;

  @NonNull
  public final LinearLayout layoutTemperatureValue;

  @NonNull
  public final LinearLayout layoutWeightValue;

  @NonNull
  public final TextView textViewBloodSugarValue;

  @NonNull
  public final TextView textViewGeneralNoteValue;

  @NonNull
  public final TextView textViewHeartRateValue;

  @NonNull
  public final TextView textViewMoodValue;

  @NonNull
  public final TextView textViewNote;

  @NonNull
  public final TextView textViewSymptomValue;

  @NonNull
  public final TextView textViewSystolicValue;

  @NonNull
  public final TextView textViewTemperatureValue;

  @NonNull
  public final TextView textViewTimestamp;

  @NonNull
  public final TextView textViewType;

  @NonNull
  public final TextView textViewWeightValue;

  @NonNull
  public final LinearLayout valuesContainer;

  private HealthNoteItemBinding(@NonNull MaterialCardView rootView, @NonNull ImageButton buttonMenu,
      @NonNull ImageView imageViewIcon, @NonNull LinearLayout layoutBloodPressureValues,
      @NonNull LinearLayout layoutBloodSugarValue, @NonNull LinearLayout layoutHeartRateValue,
      @NonNull LinearLayout layoutMoodValue, @NonNull LinearLayout layoutSymptomValue,
      @NonNull LinearLayout layoutTemperatureValue, @NonNull LinearLayout layoutWeightValue,
      @NonNull TextView textViewBloodSugarValue, @NonNull TextView textViewGeneralNoteValue,
      @NonNull TextView textViewHeartRateValue, @NonNull TextView textViewMoodValue,
      @NonNull TextView textViewNote, @NonNull TextView textViewSymptomValue,
      @NonNull TextView textViewSystolicValue, @NonNull TextView textViewTemperatureValue,
      @NonNull TextView textViewTimestamp, @NonNull TextView textViewType,
      @NonNull TextView textViewWeightValue, @NonNull LinearLayout valuesContainer) {
    this.rootView = rootView;
    this.buttonMenu = buttonMenu;
    this.imageViewIcon = imageViewIcon;
    this.layoutBloodPressureValues = layoutBloodPressureValues;
    this.layoutBloodSugarValue = layoutBloodSugarValue;
    this.layoutHeartRateValue = layoutHeartRateValue;
    this.layoutMoodValue = layoutMoodValue;
    this.layoutSymptomValue = layoutSymptomValue;
    this.layoutTemperatureValue = layoutTemperatureValue;
    this.layoutWeightValue = layoutWeightValue;
    this.textViewBloodSugarValue = textViewBloodSugarValue;
    this.textViewGeneralNoteValue = textViewGeneralNoteValue;
    this.textViewHeartRateValue = textViewHeartRateValue;
    this.textViewMoodValue = textViewMoodValue;
    this.textViewNote = textViewNote;
    this.textViewSymptomValue = textViewSymptomValue;
    this.textViewSystolicValue = textViewSystolicValue;
    this.textViewTemperatureValue = textViewTemperatureValue;
    this.textViewTimestamp = textViewTimestamp;
    this.textViewType = textViewType;
    this.textViewWeightValue = textViewWeightValue;
    this.valuesContainer = valuesContainer;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static HealthNoteItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HealthNoteItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.health_note_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HealthNoteItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonMenu;
      ImageButton buttonMenu = ViewBindings.findChildViewById(rootView, id);
      if (buttonMenu == null) {
        break missingId;
      }

      id = R.id.imageViewIcon;
      ImageView imageViewIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageViewIcon == null) {
        break missingId;
      }

      id = R.id.layoutBloodPressureValues;
      LinearLayout layoutBloodPressureValues = ViewBindings.findChildViewById(rootView, id);
      if (layoutBloodPressureValues == null) {
        break missingId;
      }

      id = R.id.layoutBloodSugarValue;
      LinearLayout layoutBloodSugarValue = ViewBindings.findChildViewById(rootView, id);
      if (layoutBloodSugarValue == null) {
        break missingId;
      }

      id = R.id.layoutHeartRateValue;
      LinearLayout layoutHeartRateValue = ViewBindings.findChildViewById(rootView, id);
      if (layoutHeartRateValue == null) {
        break missingId;
      }

      id = R.id.layoutMoodValue;
      LinearLayout layoutMoodValue = ViewBindings.findChildViewById(rootView, id);
      if (layoutMoodValue == null) {
        break missingId;
      }

      id = R.id.layoutSymptomValue;
      LinearLayout layoutSymptomValue = ViewBindings.findChildViewById(rootView, id);
      if (layoutSymptomValue == null) {
        break missingId;
      }

      id = R.id.layoutTemperatureValue;
      LinearLayout layoutTemperatureValue = ViewBindings.findChildViewById(rootView, id);
      if (layoutTemperatureValue == null) {
        break missingId;
      }

      id = R.id.layoutWeightValue;
      LinearLayout layoutWeightValue = ViewBindings.findChildViewById(rootView, id);
      if (layoutWeightValue == null) {
        break missingId;
      }

      id = R.id.textViewBloodSugarValue;
      TextView textViewBloodSugarValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewBloodSugarValue == null) {
        break missingId;
      }

      id = R.id.textViewGeneralNoteValue;
      TextView textViewGeneralNoteValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewGeneralNoteValue == null) {
        break missingId;
      }

      id = R.id.textViewHeartRateValue;
      TextView textViewHeartRateValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewHeartRateValue == null) {
        break missingId;
      }

      id = R.id.textViewMoodValue;
      TextView textViewMoodValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewMoodValue == null) {
        break missingId;
      }

      id = R.id.textViewNote;
      TextView textViewNote = ViewBindings.findChildViewById(rootView, id);
      if (textViewNote == null) {
        break missingId;
      }

      id = R.id.textViewSymptomValue;
      TextView textViewSymptomValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewSymptomValue == null) {
        break missingId;
      }

      id = R.id.textViewSystolicValue;
      TextView textViewSystolicValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewSystolicValue == null) {
        break missingId;
      }

      id = R.id.textViewTemperatureValue;
      TextView textViewTemperatureValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewTemperatureValue == null) {
        break missingId;
      }

      id = R.id.textViewTimestamp;
      TextView textViewTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (textViewTimestamp == null) {
        break missingId;
      }

      id = R.id.textViewType;
      TextView textViewType = ViewBindings.findChildViewById(rootView, id);
      if (textViewType == null) {
        break missingId;
      }

      id = R.id.textViewWeightValue;
      TextView textViewWeightValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewWeightValue == null) {
        break missingId;
      }

      id = R.id.valuesContainer;
      LinearLayout valuesContainer = ViewBindings.findChildViewById(rootView, id);
      if (valuesContainer == null) {
        break missingId;
      }

      return new HealthNoteItemBinding((MaterialCardView) rootView, buttonMenu, imageViewIcon,
          layoutBloodPressureValues, layoutBloodSugarValue, layoutHeartRateValue, layoutMoodValue,
          layoutSymptomValue, layoutTemperatureValue, layoutWeightValue, textViewBloodSugarValue,
          textViewGeneralNoteValue, textViewHeartRateValue, textViewMoodValue, textViewNote,
          textViewSymptomValue, textViewSystolicValue, textViewTemperatureValue, textViewTimestamp,
          textViewType, textViewWeightValue, valuesContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
