// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.gms.ads.AdView;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardDependenteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AdView adView;

  @NonNull
  public final MaterialCardView cardMissedDoseAlert;

  @NonNull
  public final MaterialCardView cardSummary;

  @NonNull
  public final MaterialCardView cardWeeklySummary;

  @NonNull
  public final MaterialCardView cardWeightTracker;

  @NonNull
  public final ShapeableImageView imageViewAvatar;

  @NonNull
  public final TextView labelAdvancedTools;

  @NonNull
  public final TextView labelCareManagement;

  @NonNull
  public final TextView labelHealthData;

  @NonNull
  public final TextView labelProfileManagement;

  @NonNull
  public final TextView labelWeightTracker;

  @NonNull
  public final LinearLayout layoutImc;

  @NonNull
  public final LayoutDashboardRemindersBinding layoutReminders;

  @NonNull
  public final LinearLayout linearLayoutInfo;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final LinearProgressIndicator progressWeightGoal;

  @NonNull
  public final RecyclerView recyclerViewAdvancedTools;

  @NonNull
  public final RecyclerView recyclerViewCareManagement;

  @NonNull
  public final RecyclerView recyclerViewHealthData;

  @NonNull
  public final RecyclerView recyclerViewProfileManagement;

  @NonNull
  public final TextView textViewBloodType;

  @NonNull
  public final TextView textViewDependentAge;

  @NonNull
  public final TextView textViewDependentName;

  @NonNull
  public final TextView textViewHeight;

  @NonNull
  public final TextView textViewImcClassification;

  @NonNull
  public final TextView textViewImcValue;

  @NonNull
  public final TextView textViewMissedDosesDetails;

  @NonNull
  public final TextView textViewSummary;

  @NonNull
  public final TextView textViewWeeklyActivity;

  @NonNull
  public final TextView textViewWeeklyHydration;

  @NonNull
  public final TextView textViewWeight;

  @NonNull
  public final TextView textViewWeightGoalProgress;

  private FragmentDashboardDependenteBinding(@NonNull ConstraintLayout rootView,
      @NonNull AdView adView, @NonNull MaterialCardView cardMissedDoseAlert,
      @NonNull MaterialCardView cardSummary, @NonNull MaterialCardView cardWeeklySummary,
      @NonNull MaterialCardView cardWeightTracker, @NonNull ShapeableImageView imageViewAvatar,
      @NonNull TextView labelAdvancedTools, @NonNull TextView labelCareManagement,
      @NonNull TextView labelHealthData, @NonNull TextView labelProfileManagement,
      @NonNull TextView labelWeightTracker, @NonNull LinearLayout layoutImc,
      @NonNull LayoutDashboardRemindersBinding layoutReminders,
      @NonNull LinearLayout linearLayoutInfo, @NonNull NestedScrollView nestedScrollView,
      @NonNull LinearProgressIndicator progressWeightGoal,
      @NonNull RecyclerView recyclerViewAdvancedTools,
      @NonNull RecyclerView recyclerViewCareManagement,
      @NonNull RecyclerView recyclerViewHealthData,
      @NonNull RecyclerView recyclerViewProfileManagement, @NonNull TextView textViewBloodType,
      @NonNull TextView textViewDependentAge, @NonNull TextView textViewDependentName,
      @NonNull TextView textViewHeight, @NonNull TextView textViewImcClassification,
      @NonNull TextView textViewImcValue, @NonNull TextView textViewMissedDosesDetails,
      @NonNull TextView textViewSummary, @NonNull TextView textViewWeeklyActivity,
      @NonNull TextView textViewWeeklyHydration, @NonNull TextView textViewWeight,
      @NonNull TextView textViewWeightGoalProgress) {
    this.rootView = rootView;
    this.adView = adView;
    this.cardMissedDoseAlert = cardMissedDoseAlert;
    this.cardSummary = cardSummary;
    this.cardWeeklySummary = cardWeeklySummary;
    this.cardWeightTracker = cardWeightTracker;
    this.imageViewAvatar = imageViewAvatar;
    this.labelAdvancedTools = labelAdvancedTools;
    this.labelCareManagement = labelCareManagement;
    this.labelHealthData = labelHealthData;
    this.labelProfileManagement = labelProfileManagement;
    this.labelWeightTracker = labelWeightTracker;
    this.layoutImc = layoutImc;
    this.layoutReminders = layoutReminders;
    this.linearLayoutInfo = linearLayoutInfo;
    this.nestedScrollView = nestedScrollView;
    this.progressWeightGoal = progressWeightGoal;
    this.recyclerViewAdvancedTools = recyclerViewAdvancedTools;
    this.recyclerViewCareManagement = recyclerViewCareManagement;
    this.recyclerViewHealthData = recyclerViewHealthData;
    this.recyclerViewProfileManagement = recyclerViewProfileManagement;
    this.textViewBloodType = textViewBloodType;
    this.textViewDependentAge = textViewDependentAge;
    this.textViewDependentName = textViewDependentName;
    this.textViewHeight = textViewHeight;
    this.textViewImcClassification = textViewImcClassification;
    this.textViewImcValue = textViewImcValue;
    this.textViewMissedDosesDetails = textViewMissedDosesDetails;
    this.textViewSummary = textViewSummary;
    this.textViewWeeklyActivity = textViewWeeklyActivity;
    this.textViewWeeklyHydration = textViewWeeklyHydration;
    this.textViewWeight = textViewWeight;
    this.textViewWeightGoalProgress = textViewWeightGoalProgress;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardDependenteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardDependenteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard_dependente, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardDependenteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adView;
      AdView adView = ViewBindings.findChildViewById(rootView, id);
      if (adView == null) {
        break missingId;
      }

      id = R.id.cardMissedDoseAlert;
      MaterialCardView cardMissedDoseAlert = ViewBindings.findChildViewById(rootView, id);
      if (cardMissedDoseAlert == null) {
        break missingId;
      }

      id = R.id.cardSummary;
      MaterialCardView cardSummary = ViewBindings.findChildViewById(rootView, id);
      if (cardSummary == null) {
        break missingId;
      }

      id = R.id.cardWeeklySummary;
      MaterialCardView cardWeeklySummary = ViewBindings.findChildViewById(rootView, id);
      if (cardWeeklySummary == null) {
        break missingId;
      }

      id = R.id.cardWeightTracker;
      MaterialCardView cardWeightTracker = ViewBindings.findChildViewById(rootView, id);
      if (cardWeightTracker == null) {
        break missingId;
      }

      id = R.id.imageViewAvatar;
      ShapeableImageView imageViewAvatar = ViewBindings.findChildViewById(rootView, id);
      if (imageViewAvatar == null) {
        break missingId;
      }

      id = R.id.label_advanced_tools;
      TextView labelAdvancedTools = ViewBindings.findChildViewById(rootView, id);
      if (labelAdvancedTools == null) {
        break missingId;
      }

      id = R.id.label_care_management;
      TextView labelCareManagement = ViewBindings.findChildViewById(rootView, id);
      if (labelCareManagement == null) {
        break missingId;
      }

      id = R.id.label_health_data;
      TextView labelHealthData = ViewBindings.findChildViewById(rootView, id);
      if (labelHealthData == null) {
        break missingId;
      }

      id = R.id.label_profile_management;
      TextView labelProfileManagement = ViewBindings.findChildViewById(rootView, id);
      if (labelProfileManagement == null) {
        break missingId;
      }

      id = R.id.labelWeightTracker;
      TextView labelWeightTracker = ViewBindings.findChildViewById(rootView, id);
      if (labelWeightTracker == null) {
        break missingId;
      }

      id = R.id.layoutImc;
      LinearLayout layoutImc = ViewBindings.findChildViewById(rootView, id);
      if (layoutImc == null) {
        break missingId;
      }

      id = R.id.layout_reminders;
      View layoutReminders = ViewBindings.findChildViewById(rootView, id);
      if (layoutReminders == null) {
        break missingId;
      }
      LayoutDashboardRemindersBinding binding_layoutReminders = LayoutDashboardRemindersBinding.bind(layoutReminders);

      id = R.id.linearLayoutInfo;
      LinearLayout linearLayoutInfo = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutInfo == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.progressWeightGoal;
      LinearProgressIndicator progressWeightGoal = ViewBindings.findChildViewById(rootView, id);
      if (progressWeightGoal == null) {
        break missingId;
      }

      id = R.id.recyclerView_advanced_tools;
      RecyclerView recyclerViewAdvancedTools = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewAdvancedTools == null) {
        break missingId;
      }

      id = R.id.recyclerView_care_management;
      RecyclerView recyclerViewCareManagement = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewCareManagement == null) {
        break missingId;
      }

      id = R.id.recyclerView_health_data;
      RecyclerView recyclerViewHealthData = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewHealthData == null) {
        break missingId;
      }

      id = R.id.recyclerView_profile_management;
      RecyclerView recyclerViewProfileManagement = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewProfileManagement == null) {
        break missingId;
      }

      id = R.id.textViewBloodType;
      TextView textViewBloodType = ViewBindings.findChildViewById(rootView, id);
      if (textViewBloodType == null) {
        break missingId;
      }

      id = R.id.textViewDependentAge;
      TextView textViewDependentAge = ViewBindings.findChildViewById(rootView, id);
      if (textViewDependentAge == null) {
        break missingId;
      }

      id = R.id.textViewDependentName;
      TextView textViewDependentName = ViewBindings.findChildViewById(rootView, id);
      if (textViewDependentName == null) {
        break missingId;
      }

      id = R.id.textViewHeight;
      TextView textViewHeight = ViewBindings.findChildViewById(rootView, id);
      if (textViewHeight == null) {
        break missingId;
      }

      id = R.id.textViewImcClassification;
      TextView textViewImcClassification = ViewBindings.findChildViewById(rootView, id);
      if (textViewImcClassification == null) {
        break missingId;
      }

      id = R.id.textViewImcValue;
      TextView textViewImcValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewImcValue == null) {
        break missingId;
      }

      id = R.id.textViewMissedDosesDetails;
      TextView textViewMissedDosesDetails = ViewBindings.findChildViewById(rootView, id);
      if (textViewMissedDosesDetails == null) {
        break missingId;
      }

      id = R.id.textViewSummary;
      TextView textViewSummary = ViewBindings.findChildViewById(rootView, id);
      if (textViewSummary == null) {
        break missingId;
      }

      id = R.id.textViewWeeklyActivity;
      TextView textViewWeeklyActivity = ViewBindings.findChildViewById(rootView, id);
      if (textViewWeeklyActivity == null) {
        break missingId;
      }

      id = R.id.textViewWeeklyHydration;
      TextView textViewWeeklyHydration = ViewBindings.findChildViewById(rootView, id);
      if (textViewWeeklyHydration == null) {
        break missingId;
      }

      id = R.id.textViewWeight;
      TextView textViewWeight = ViewBindings.findChildViewById(rootView, id);
      if (textViewWeight == null) {
        break missingId;
      }

      id = R.id.textViewWeightGoalProgress;
      TextView textViewWeightGoalProgress = ViewBindings.findChildViewById(rootView, id);
      if (textViewWeightGoalProgress == null) {
        break missingId;
      }

      return new FragmentDashboardDependenteBinding((ConstraintLayout) rootView, adView,
          cardMissedDoseAlert, cardSummary, cardWeeklySummary, cardWeightTracker, imageViewAvatar,
          labelAdvancedTools, labelCareManagement, labelHealthData, labelProfileManagement,
          labelWeightTracker, layoutImc, binding_layoutReminders, linearLayoutInfo,
          nestedScrollView, progressWeightGoal, recyclerViewAdvancedTools,
          recyclerViewCareManagement, recyclerViewHealthData, recyclerViewProfileManagement,
          textViewBloodType, textViewDependentAge, textViewDependentName, textViewHeight,
          textViewImcClassification, textViewImcValue, textViewMissedDosesDetails, textViewSummary,
          textViewWeeklyActivity, textViewWeeklyHydration, textViewWeight,
          textViewWeightGoalProgress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
