// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.divider.MaterialDivider;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddMealBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton buttonAnalyzeWithCamera;

  @NonNull
  public final MaterialDivider dividerAi;

  @NonNull
  public final TextInputEditText editTextCalories;

  @NonNull
  public final TextInputEditText editTextDescription;

  @NonNull
  public final TextView labelBenefits;

  @NonNull
  public final TextView labelMealType;

  @NonNull
  public final TextView labelTips;

  @NonNull
  public final LinearLayout layoutAiResults;

  @NonNull
  public final ProgressBar progressBarAnalysis;

  @NonNull
  public final RadioButton radioAlmoco;

  @NonNull
  public final RadioButton radioCafeDaManha;

  @NonNull
  public final RadioGroup radioGroupMealType;

  @NonNull
  public final RadioButton radioJantar;

  @NonNull
  public final RadioButton radioLanche;

  @NonNull
  public final TextView textViewBenefits;

  @NonNull
  public final TextView textViewTips;

  @NonNull
  public final TextInputLayout tilCalories;

  @NonNull
  public final TextInputLayout tilDescription;

  private DialogAddMealBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton buttonAnalyzeWithCamera, @NonNull MaterialDivider dividerAi,
      @NonNull TextInputEditText editTextCalories, @NonNull TextInputEditText editTextDescription,
      @NonNull TextView labelBenefits, @NonNull TextView labelMealType, @NonNull TextView labelTips,
      @NonNull LinearLayout layoutAiResults, @NonNull ProgressBar progressBarAnalysis,
      @NonNull RadioButton radioAlmoco, @NonNull RadioButton radioCafeDaManha,
      @NonNull RadioGroup radioGroupMealType, @NonNull RadioButton radioJantar,
      @NonNull RadioButton radioLanche, @NonNull TextView textViewBenefits,
      @NonNull TextView textViewTips, @NonNull TextInputLayout tilCalories,
      @NonNull TextInputLayout tilDescription) {
    this.rootView = rootView;
    this.buttonAnalyzeWithCamera = buttonAnalyzeWithCamera;
    this.dividerAi = dividerAi;
    this.editTextCalories = editTextCalories;
    this.editTextDescription = editTextDescription;
    this.labelBenefits = labelBenefits;
    this.labelMealType = labelMealType;
    this.labelTips = labelTips;
    this.layoutAiResults = layoutAiResults;
    this.progressBarAnalysis = progressBarAnalysis;
    this.radioAlmoco = radioAlmoco;
    this.radioCafeDaManha = radioCafeDaManha;
    this.radioGroupMealType = radioGroupMealType;
    this.radioJantar = radioJantar;
    this.radioLanche = radioLanche;
    this.textViewBenefits = textViewBenefits;
    this.textViewTips = textViewTips;
    this.tilCalories = tilCalories;
    this.tilDescription = tilDescription;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddMealBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddMealBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_meal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddMealBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAnalyzeWithCamera;
      MaterialButton buttonAnalyzeWithCamera = ViewBindings.findChildViewById(rootView, id);
      if (buttonAnalyzeWithCamera == null) {
        break missingId;
      }

      id = R.id.dividerAi;
      MaterialDivider dividerAi = ViewBindings.findChildViewById(rootView, id);
      if (dividerAi == null) {
        break missingId;
      }

      id = R.id.editTextCalories;
      TextInputEditText editTextCalories = ViewBindings.findChildViewById(rootView, id);
      if (editTextCalories == null) {
        break missingId;
      }

      id = R.id.editTextDescription;
      TextInputEditText editTextDescription = ViewBindings.findChildViewById(rootView, id);
      if (editTextDescription == null) {
        break missingId;
      }

      id = R.id.labelBenefits;
      TextView labelBenefits = ViewBindings.findChildViewById(rootView, id);
      if (labelBenefits == null) {
        break missingId;
      }

      id = R.id.labelMealType;
      TextView labelMealType = ViewBindings.findChildViewById(rootView, id);
      if (labelMealType == null) {
        break missingId;
      }

      id = R.id.labelTips;
      TextView labelTips = ViewBindings.findChildViewById(rootView, id);
      if (labelTips == null) {
        break missingId;
      }

      id = R.id.layoutAiResults;
      LinearLayout layoutAiResults = ViewBindings.findChildViewById(rootView, id);
      if (layoutAiResults == null) {
        break missingId;
      }

      id = R.id.progressBarAnalysis;
      ProgressBar progressBarAnalysis = ViewBindings.findChildViewById(rootView, id);
      if (progressBarAnalysis == null) {
        break missingId;
      }

      id = R.id.radioAlmoco;
      RadioButton radioAlmoco = ViewBindings.findChildViewById(rootView, id);
      if (radioAlmoco == null) {
        break missingId;
      }

      id = R.id.radioCafeDaManha;
      RadioButton radioCafeDaManha = ViewBindings.findChildViewById(rootView, id);
      if (radioCafeDaManha == null) {
        break missingId;
      }

      id = R.id.radioGroupMealType;
      RadioGroup radioGroupMealType = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupMealType == null) {
        break missingId;
      }

      id = R.id.radioJantar;
      RadioButton radioJantar = ViewBindings.findChildViewById(rootView, id);
      if (radioJantar == null) {
        break missingId;
      }

      id = R.id.radioLanche;
      RadioButton radioLanche = ViewBindings.findChildViewById(rootView, id);
      if (radioLanche == null) {
        break missingId;
      }

      id = R.id.textViewBenefits;
      TextView textViewBenefits = ViewBindings.findChildViewById(rootView, id);
      if (textViewBenefits == null) {
        break missingId;
      }

      id = R.id.textViewTips;
      TextView textViewTips = ViewBindings.findChildViewById(rootView, id);
      if (textViewTips == null) {
        break missingId;
      }

      id = R.id.tilCalories;
      TextInputLayout tilCalories = ViewBindings.findChildViewById(rootView, id);
      if (tilCalories == null) {
        break missingId;
      }

      id = R.id.tilDescription;
      TextInputLayout tilDescription = ViewBindings.findChildViewById(rootView, id);
      if (tilDescription == null) {
        break missingId;
      }

      return new DialogAddMealBinding((ScrollView) rootView, buttonAnalyzeWithCamera, dividerAi,
          editTextCalories, editTextDescription, labelBenefits, labelMealType, labelTips,
          layoutAiResults, progressBarAnalysis, radioAlmoco, radioCafeDaManha, radioGroupMealType,
          radioJantar, radioLanche, textViewBenefits, textViewTips, tilCalories, tilDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
