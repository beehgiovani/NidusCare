// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentScanAndConfirmBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonSalvar;

  @NonNull
  public final TextInputEditText editTextAnotacoes;

  @NonNull
  public final TextInputEditText editTextClasseTerapeutica;

  @NonNull
  public final TextInputEditText editTextEstoque;

  @NonNull
  public final TextInputEditText editTextLote;

  @NonNull
  public final TextInputEditText editTextNome;

  @NonNull
  public final TextInputEditText editTextPrincipioAtivo;

  @NonNull
  public final TextInputEditText editTextValidade;

  @NonNull
  public final FloatingActionButton fabRetakePhoto;

  @NonNull
  public final ImageView imageViewPreview;

  @NonNull
  public final TextInputLayout tilAnotacoes;

  @NonNull
  public final TextInputLayout tilClasseTerapeutica;

  @NonNull
  public final TextInputLayout tilEstoque;

  @NonNull
  public final TextInputLayout tilLote;

  @NonNull
  public final TextInputLayout tilNome;

  @NonNull
  public final TextInputLayout tilPrincipioAtivo;

  @NonNull
  public final TextInputLayout tilValidade;

  private FragmentScanAndConfirmBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonSalvar, @NonNull TextInputEditText editTextAnotacoes,
      @NonNull TextInputEditText editTextClasseTerapeutica,
      @NonNull TextInputEditText editTextEstoque, @NonNull TextInputEditText editTextLote,
      @NonNull TextInputEditText editTextNome, @NonNull TextInputEditText editTextPrincipioAtivo,
      @NonNull TextInputEditText editTextValidade, @NonNull FloatingActionButton fabRetakePhoto,
      @NonNull ImageView imageViewPreview, @NonNull TextInputLayout tilAnotacoes,
      @NonNull TextInputLayout tilClasseTerapeutica, @NonNull TextInputLayout tilEstoque,
      @NonNull TextInputLayout tilLote, @NonNull TextInputLayout tilNome,
      @NonNull TextInputLayout tilPrincipioAtivo, @NonNull TextInputLayout tilValidade) {
    this.rootView = rootView;
    this.buttonSalvar = buttonSalvar;
    this.editTextAnotacoes = editTextAnotacoes;
    this.editTextClasseTerapeutica = editTextClasseTerapeutica;
    this.editTextEstoque = editTextEstoque;
    this.editTextLote = editTextLote;
    this.editTextNome = editTextNome;
    this.editTextPrincipioAtivo = editTextPrincipioAtivo;
    this.editTextValidade = editTextValidade;
    this.fabRetakePhoto = fabRetakePhoto;
    this.imageViewPreview = imageViewPreview;
    this.tilAnotacoes = tilAnotacoes;
    this.tilClasseTerapeutica = tilClasseTerapeutica;
    this.tilEstoque = tilEstoque;
    this.tilLote = tilLote;
    this.tilNome = tilNome;
    this.tilPrincipioAtivo = tilPrincipioAtivo;
    this.tilValidade = tilValidade;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentScanAndConfirmBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentScanAndConfirmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_scan_and_confirm, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentScanAndConfirmBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSalvar;
      Button buttonSalvar = ViewBindings.findChildViewById(rootView, id);
      if (buttonSalvar == null) {
        break missingId;
      }

      id = R.id.editTextAnotacoes;
      TextInputEditText editTextAnotacoes = ViewBindings.findChildViewById(rootView, id);
      if (editTextAnotacoes == null) {
        break missingId;
      }

      id = R.id.editTextClasseTerapeutica;
      TextInputEditText editTextClasseTerapeutica = ViewBindings.findChildViewById(rootView, id);
      if (editTextClasseTerapeutica == null) {
        break missingId;
      }

      id = R.id.editTextEstoque;
      TextInputEditText editTextEstoque = ViewBindings.findChildViewById(rootView, id);
      if (editTextEstoque == null) {
        break missingId;
      }

      id = R.id.editTextLote;
      TextInputEditText editTextLote = ViewBindings.findChildViewById(rootView, id);
      if (editTextLote == null) {
        break missingId;
      }

      id = R.id.editTextNome;
      TextInputEditText editTextNome = ViewBindings.findChildViewById(rootView, id);
      if (editTextNome == null) {
        break missingId;
      }

      id = R.id.editTextPrincipioAtivo;
      TextInputEditText editTextPrincipioAtivo = ViewBindings.findChildViewById(rootView, id);
      if (editTextPrincipioAtivo == null) {
        break missingId;
      }

      id = R.id.editTextValidade;
      TextInputEditText editTextValidade = ViewBindings.findChildViewById(rootView, id);
      if (editTextValidade == null) {
        break missingId;
      }

      id = R.id.fabRetakePhoto;
      FloatingActionButton fabRetakePhoto = ViewBindings.findChildViewById(rootView, id);
      if (fabRetakePhoto == null) {
        break missingId;
      }

      id = R.id.imageViewPreview;
      ImageView imageViewPreview = ViewBindings.findChildViewById(rootView, id);
      if (imageViewPreview == null) {
        break missingId;
      }

      id = R.id.tilAnotacoes;
      TextInputLayout tilAnotacoes = ViewBindings.findChildViewById(rootView, id);
      if (tilAnotacoes == null) {
        break missingId;
      }

      id = R.id.tilClasseTerapeutica;
      TextInputLayout tilClasseTerapeutica = ViewBindings.findChildViewById(rootView, id);
      if (tilClasseTerapeutica == null) {
        break missingId;
      }

      id = R.id.tilEstoque;
      TextInputLayout tilEstoque = ViewBindings.findChildViewById(rootView, id);
      if (tilEstoque == null) {
        break missingId;
      }

      id = R.id.tilLote;
      TextInputLayout tilLote = ViewBindings.findChildViewById(rootView, id);
      if (tilLote == null) {
        break missingId;
      }

      id = R.id.tilNome;
      TextInputLayout tilNome = ViewBindings.findChildViewById(rootView, id);
      if (tilNome == null) {
        break missingId;
      }

      id = R.id.tilPrincipioAtivo;
      TextInputLayout tilPrincipioAtivo = ViewBindings.findChildViewById(rootView, id);
      if (tilPrincipioAtivo == null) {
        break missingId;
      }

      id = R.id.tilValidade;
      TextInputLayout tilValidade = ViewBindings.findChildViewById(rootView, id);
      if (tilValidade == null) {
        break missingId;
      }

      return new FragmentScanAndConfirmBinding((ConstraintLayout) rootView, buttonSalvar,
          editTextAnotacoes, editTextClasseTerapeutica, editTextEstoque, editTextLote, editTextNome,
          editTextPrincipioAtivo, editTextValidade, fabRetakePhoto, imageViewPreview, tilAnotacoes,
          tilClasseTerapeutica, tilEstoque, tilLote, tilNome, tilPrincipioAtivo, tilValidade);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
