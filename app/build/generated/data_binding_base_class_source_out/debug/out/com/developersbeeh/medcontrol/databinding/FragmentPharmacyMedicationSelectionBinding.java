// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPharmacyMedicationSelectionBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Chip chipAll;

  @NonNull
  public final ChipGroup chipGroupFilter;

  @NonNull
  public final Chip chipLowStock;

  @NonNull
  public final LinearLayout emptyStateLayout;

  @NonNull
  public final ExtendedFloatingActionButton fabSend;

  @NonNull
  public final LinearProgressIndicator progressBar;

  @NonNull
  public final RecyclerView recyclerViewMedications;

  @NonNull
  public final TextView textViewPharmacyName;

  @NonNull
  public final TextView textViewTitle;

  private FragmentPharmacyMedicationSelectionBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Chip chipAll, @NonNull ChipGroup chipGroupFilter, @NonNull Chip chipLowStock,
      @NonNull LinearLayout emptyStateLayout, @NonNull ExtendedFloatingActionButton fabSend,
      @NonNull LinearProgressIndicator progressBar, @NonNull RecyclerView recyclerViewMedications,
      @NonNull TextView textViewPharmacyName, @NonNull TextView textViewTitle) {
    this.rootView = rootView;
    this.chipAll = chipAll;
    this.chipGroupFilter = chipGroupFilter;
    this.chipLowStock = chipLowStock;
    this.emptyStateLayout = emptyStateLayout;
    this.fabSend = fabSend;
    this.progressBar = progressBar;
    this.recyclerViewMedications = recyclerViewMedications;
    this.textViewPharmacyName = textViewPharmacyName;
    this.textViewTitle = textViewTitle;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPharmacyMedicationSelectionBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPharmacyMedicationSelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_pharmacy_medication_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPharmacyMedicationSelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chipAll;
      Chip chipAll = ViewBindings.findChildViewById(rootView, id);
      if (chipAll == null) {
        break missingId;
      }

      id = R.id.chipGroupFilter;
      ChipGroup chipGroupFilter = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupFilter == null) {
        break missingId;
      }

      id = R.id.chipLowStock;
      Chip chipLowStock = ViewBindings.findChildViewById(rootView, id);
      if (chipLowStock == null) {
        break missingId;
      }

      id = R.id.emptyStateLayout;
      LinearLayout emptyStateLayout = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateLayout == null) {
        break missingId;
      }

      id = R.id.fabSend;
      ExtendedFloatingActionButton fabSend = ViewBindings.findChildViewById(rootView, id);
      if (fabSend == null) {
        break missingId;
      }

      id = R.id.progressBar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerViewMedications;
      RecyclerView recyclerViewMedications = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewMedications == null) {
        break missingId;
      }

      id = R.id.textViewPharmacyName;
      TextView textViewPharmacyName = ViewBindings.findChildViewById(rootView, id);
      if (textViewPharmacyName == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      return new FragmentPharmacyMedicationSelectionBinding((CoordinatorLayout) rootView, chipAll,
          chipGroupFilter, chipLowStock, emptyStateLayout, fabSend, progressBar,
          recyclerViewMedications, textViewPharmacyName, textViewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
