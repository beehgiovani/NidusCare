// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.github.mikephil.charting.charts.LineChart;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHealthChartsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Chip chip30days;

  @NonNull
  public final Chip chip7days;

  @NonNull
  public final Chip chip90days;

  @NonNull
  public final Chip chipBloodPressure;

  @NonNull
  public final Chip chipBloodSugar;

  @NonNull
  public final ChipGroup chipGroupChartType;

  @NonNull
  public final ChipGroup chipGroupPeriod;

  @NonNull
  public final Chip chipTemperature;

  @NonNull
  public final Chip chipWeight;

  @NonNull
  public final LinearLayout emptyStateLayout;

  @NonNull
  public final LineChart lineChart;

  @NonNull
  public final TextView textViewSubtitle;

  @NonNull
  public final TextView textViewTitle;

  private FragmentHealthChartsBinding(@NonNull LinearLayout rootView, @NonNull Chip chip30days,
      @NonNull Chip chip7days, @NonNull Chip chip90days, @NonNull Chip chipBloodPressure,
      @NonNull Chip chipBloodSugar, @NonNull ChipGroup chipGroupChartType,
      @NonNull ChipGroup chipGroupPeriod, @NonNull Chip chipTemperature, @NonNull Chip chipWeight,
      @NonNull LinearLayout emptyStateLayout, @NonNull LineChart lineChart,
      @NonNull TextView textViewSubtitle, @NonNull TextView textViewTitle) {
    this.rootView = rootView;
    this.chip30days = chip30days;
    this.chip7days = chip7days;
    this.chip90days = chip90days;
    this.chipBloodPressure = chipBloodPressure;
    this.chipBloodSugar = chipBloodSugar;
    this.chipGroupChartType = chipGroupChartType;
    this.chipGroupPeriod = chipGroupPeriod;
    this.chipTemperature = chipTemperature;
    this.chipWeight = chipWeight;
    this.emptyStateLayout = emptyStateLayout;
    this.lineChart = lineChart;
    this.textViewSubtitle = textViewSubtitle;
    this.textViewTitle = textViewTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHealthChartsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHealthChartsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_health_charts, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHealthChartsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chip30days;
      Chip chip30days = ViewBindings.findChildViewById(rootView, id);
      if (chip30days == null) {
        break missingId;
      }

      id = R.id.chip7days;
      Chip chip7days = ViewBindings.findChildViewById(rootView, id);
      if (chip7days == null) {
        break missingId;
      }

      id = R.id.chip90days;
      Chip chip90days = ViewBindings.findChildViewById(rootView, id);
      if (chip90days == null) {
        break missingId;
      }

      id = R.id.chipBloodPressure;
      Chip chipBloodPressure = ViewBindings.findChildViewById(rootView, id);
      if (chipBloodPressure == null) {
        break missingId;
      }

      id = R.id.chipBloodSugar;
      Chip chipBloodSugar = ViewBindings.findChildViewById(rootView, id);
      if (chipBloodSugar == null) {
        break missingId;
      }

      id = R.id.chipGroupChartType;
      ChipGroup chipGroupChartType = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupChartType == null) {
        break missingId;
      }

      id = R.id.chipGroupPeriod;
      ChipGroup chipGroupPeriod = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupPeriod == null) {
        break missingId;
      }

      id = R.id.chipTemperature;
      Chip chipTemperature = ViewBindings.findChildViewById(rootView, id);
      if (chipTemperature == null) {
        break missingId;
      }

      id = R.id.chipWeight;
      Chip chipWeight = ViewBindings.findChildViewById(rootView, id);
      if (chipWeight == null) {
        break missingId;
      }

      id = R.id.emptyStateLayout;
      LinearLayout emptyStateLayout = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateLayout == null) {
        break missingId;
      }

      id = R.id.lineChart;
      LineChart lineChart = ViewBindings.findChildViewById(rootView, id);
      if (lineChart == null) {
        break missingId;
      }

      id = R.id.textViewSubtitle;
      TextView textViewSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewSubtitle == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      return new FragmentHealthChartsBinding((LinearLayout) rootView, chip30days, chip7days,
          chip90days, chipBloodPressure, chipBloodSugar, chipGroupChartType, chipGroupPeriod,
          chipTemperature, chipWeight, emptyStateLayout, lineChart, textViewSubtitle,
          textViewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
