// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutStateViewEnhancedBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final MaterialButton btnEmptyAction;

  @NonNull
  public final MaterialButton btnRetry;

  @NonNull
  public final LayoutEmptyStateBinding layoutEmpty;

  @NonNull
  public final LayoutErrorStateBinding layoutError;

  @NonNull
  public final LayoutLoadingStateBinding layoutLoading;

  private LayoutStateViewEnhancedBinding(@NonNull View rootView,
      @NonNull MaterialButton btnEmptyAction, @NonNull MaterialButton btnRetry,
      @NonNull LayoutEmptyStateBinding layoutEmpty, @NonNull LayoutErrorStateBinding layoutError,
      @NonNull LayoutLoadingStateBinding layoutLoading) {
    this.rootView = rootView;
    this.btnEmptyAction = btnEmptyAction;
    this.btnRetry = btnRetry;
    this.layoutEmpty = layoutEmpty;
    this.layoutError = layoutError;
    this.layoutLoading = layoutLoading;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutStateViewEnhancedBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.layout_state_view_enhanced, parent);
    return bind(parent);
  }

  @NonNull
  public static LayoutStateViewEnhancedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEmptyAction;
      MaterialButton btnEmptyAction = ViewBindings.findChildViewById(rootView, id);
      if (btnEmptyAction == null) {
        break missingId;
      }

      id = R.id.btnRetry;
      MaterialButton btnRetry = ViewBindings.findChildViewById(rootView, id);
      if (btnRetry == null) {
        break missingId;
      }

      id = R.id.layoutEmpty;
      View layoutEmpty = ViewBindings.findChildViewById(rootView, id);
      if (layoutEmpty == null) {
        break missingId;
      }
      LayoutEmptyStateBinding binding_layoutEmpty = LayoutEmptyStateBinding.bind(layoutEmpty);

      id = R.id.layoutError;
      View layoutError = ViewBindings.findChildViewById(rootView, id);
      if (layoutError == null) {
        break missingId;
      }
      LayoutErrorStateBinding binding_layoutError = LayoutErrorStateBinding.bind(layoutError);

      id = R.id.layoutLoading;
      View layoutLoading = ViewBindings.findChildViewById(rootView, id);
      if (layoutLoading == null) {
        break missingId;
      }
      LayoutLoadingStateBinding binding_layoutLoading = LayoutLoadingStateBinding.bind(layoutLoading);

      return new LayoutStateViewEnhancedBinding(rootView, btnEmptyAction, btnRetry,
          binding_layoutEmpty, binding_layoutError, binding_layoutLoading);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
