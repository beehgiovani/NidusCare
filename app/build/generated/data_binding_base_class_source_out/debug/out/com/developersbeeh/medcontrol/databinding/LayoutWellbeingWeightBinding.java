// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutWellbeingWeightBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton buttonSetGoal;

  @NonNull
  public final MaterialButton buttonUpdateWeight;

  @NonNull
  public final FrameLayout goalContainer;

  @NonNull
  public final TextView labelWeight;

  @NonNull
  public final LinearLayout layoutImc;

  @NonNull
  public final LinearLayout layoutWeightGoal;

  @NonNull
  public final LinearProgressIndicator progressWeightGoal;

  @NonNull
  public final TextView textViewCurrentWeight;

  @NonNull
  public final TextView textViewImcClassification;

  @NonNull
  public final TextView textViewImcValue;

  @NonNull
  public final TextView textViewWeightGoalProgress;

  @NonNull
  public final TextView textViewWeightUnit;

  private LayoutWellbeingWeightBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton buttonSetGoal, @NonNull MaterialButton buttonUpdateWeight,
      @NonNull FrameLayout goalContainer, @NonNull TextView labelWeight,
      @NonNull LinearLayout layoutImc, @NonNull LinearLayout layoutWeightGoal,
      @NonNull LinearProgressIndicator progressWeightGoal, @NonNull TextView textViewCurrentWeight,
      @NonNull TextView textViewImcClassification, @NonNull TextView textViewImcValue,
      @NonNull TextView textViewWeightGoalProgress, @NonNull TextView textViewWeightUnit) {
    this.rootView = rootView;
    this.buttonSetGoal = buttonSetGoal;
    this.buttonUpdateWeight = buttonUpdateWeight;
    this.goalContainer = goalContainer;
    this.labelWeight = labelWeight;
    this.layoutImc = layoutImc;
    this.layoutWeightGoal = layoutWeightGoal;
    this.progressWeightGoal = progressWeightGoal;
    this.textViewCurrentWeight = textViewCurrentWeight;
    this.textViewImcClassification = textViewImcClassification;
    this.textViewImcValue = textViewImcValue;
    this.textViewWeightGoalProgress = textViewWeightGoalProgress;
    this.textViewWeightUnit = textViewWeightUnit;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutWellbeingWeightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutWellbeingWeightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_wellbeing_weight, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutWellbeingWeightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSetGoal;
      MaterialButton buttonSetGoal = ViewBindings.findChildViewById(rootView, id);
      if (buttonSetGoal == null) {
        break missingId;
      }

      id = R.id.buttonUpdateWeight;
      MaterialButton buttonUpdateWeight = ViewBindings.findChildViewById(rootView, id);
      if (buttonUpdateWeight == null) {
        break missingId;
      }

      id = R.id.goalContainer;
      FrameLayout goalContainer = ViewBindings.findChildViewById(rootView, id);
      if (goalContainer == null) {
        break missingId;
      }

      id = R.id.labelWeight;
      TextView labelWeight = ViewBindings.findChildViewById(rootView, id);
      if (labelWeight == null) {
        break missingId;
      }

      id = R.id.layoutImc;
      LinearLayout layoutImc = ViewBindings.findChildViewById(rootView, id);
      if (layoutImc == null) {
        break missingId;
      }

      id = R.id.layoutWeightGoal;
      LinearLayout layoutWeightGoal = ViewBindings.findChildViewById(rootView, id);
      if (layoutWeightGoal == null) {
        break missingId;
      }

      id = R.id.progressWeightGoal;
      LinearProgressIndicator progressWeightGoal = ViewBindings.findChildViewById(rootView, id);
      if (progressWeightGoal == null) {
        break missingId;
      }

      id = R.id.textViewCurrentWeight;
      TextView textViewCurrentWeight = ViewBindings.findChildViewById(rootView, id);
      if (textViewCurrentWeight == null) {
        break missingId;
      }

      id = R.id.textViewImcClassification;
      TextView textViewImcClassification = ViewBindings.findChildViewById(rootView, id);
      if (textViewImcClassification == null) {
        break missingId;
      }

      id = R.id.textViewImcValue;
      TextView textViewImcValue = ViewBindings.findChildViewById(rootView, id);
      if (textViewImcValue == null) {
        break missingId;
      }

      id = R.id.textViewWeightGoalProgress;
      TextView textViewWeightGoalProgress = ViewBindings.findChildViewById(rootView, id);
      if (textViewWeightGoalProgress == null) {
        break missingId;
      }

      id = R.id.textViewWeightUnit;
      TextView textViewWeightUnit = ViewBindings.findChildViewById(rootView, id);
      if (textViewWeightUnit == null) {
        break missingId;
      }

      return new LayoutWellbeingWeightBinding((MaterialCardView) rootView, buttonSetGoal,
          buttonUpdateWeight, goalContainer, labelWeight, layoutImc, layoutWeightGoal,
          progressWeightGoal, textViewCurrentWeight, textViewImcClassification, textViewImcValue,
          textViewWeightGoalProgress, textViewWeightUnit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
