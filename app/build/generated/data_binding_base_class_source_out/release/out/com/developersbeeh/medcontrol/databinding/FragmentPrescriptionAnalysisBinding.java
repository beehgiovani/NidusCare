// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPrescriptionAnalysisBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonCancel;

  @NonNull
  public final MaterialButton buttonSaveAll;

  @NonNull
  public final LinearLayout contentLayout;

  @NonNull
  public final LayoutErrorStateBinding errorLayout;

  @NonNull
  public final LinearLayout loadingLayout;

  @NonNull
  public final RecyclerView recyclerViewMedications;

  @NonNull
  public final TextView textViewInstructions;

  @NonNull
  public final TextView textViewTitle;

  private FragmentPrescriptionAnalysisBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonCancel, @NonNull MaterialButton buttonSaveAll,
      @NonNull LinearLayout contentLayout, @NonNull LayoutErrorStateBinding errorLayout,
      @NonNull LinearLayout loadingLayout, @NonNull RecyclerView recyclerViewMedications,
      @NonNull TextView textViewInstructions, @NonNull TextView textViewTitle) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonSaveAll = buttonSaveAll;
    this.contentLayout = contentLayout;
    this.errorLayout = errorLayout;
    this.loadingLayout = loadingLayout;
    this.recyclerViewMedications = recyclerViewMedications;
    this.textViewInstructions = textViewInstructions;
    this.textViewTitle = textViewTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPrescriptionAnalysisBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPrescriptionAnalysisBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_prescription_analysis, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPrescriptionAnalysisBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_cancel;
      MaterialButton buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.button_save_all;
      MaterialButton buttonSaveAll = ViewBindings.findChildViewById(rootView, id);
      if (buttonSaveAll == null) {
        break missingId;
      }

      id = R.id.content_layout;
      LinearLayout contentLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLayout == null) {
        break missingId;
      }

      id = R.id.error_layout;
      View errorLayout = ViewBindings.findChildViewById(rootView, id);
      if (errorLayout == null) {
        break missingId;
      }
      LayoutErrorStateBinding binding_errorLayout = LayoutErrorStateBinding.bind(errorLayout);

      id = R.id.loading_layout;
      LinearLayout loadingLayout = ViewBindings.findChildViewById(rootView, id);
      if (loadingLayout == null) {
        break missingId;
      }

      id = R.id.recycler_view_medications;
      RecyclerView recyclerViewMedications = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewMedications == null) {
        break missingId;
      }

      id = R.id.text_view_instructions;
      TextView textViewInstructions = ViewBindings.findChildViewById(rootView, id);
      if (textViewInstructions == null) {
        break missingId;
      }

      id = R.id.text_view_title;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      return new FragmentPrescriptionAnalysisBinding((ConstraintLayout) rootView, buttonCancel,
          buttonSaveAll, contentLayout, binding_errorLayout, loadingLayout, recyclerViewMedications,
          textViewInstructions, textViewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
