// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.materialswitch.MaterialSwitch;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddDailyCycleLogBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ChipGroup chipGroupFlow;

  @NonNull
  public final ChipGroup chipGroupMood;

  @NonNull
  public final ChipGroup chipGroupSymptoms;

  @NonNull
  public final TextInputEditText editTextNotes;

  @NonNull
  public final MaterialSwitch switchProtectedSex;

  @NonNull
  public final MaterialSwitch switchSexualActivity;

  private DialogAddDailyCycleLogBinding(@NonNull NestedScrollView rootView,
      @NonNull ChipGroup chipGroupFlow, @NonNull ChipGroup chipGroupMood,
      @NonNull ChipGroup chipGroupSymptoms, @NonNull TextInputEditText editTextNotes,
      @NonNull MaterialSwitch switchProtectedSex, @NonNull MaterialSwitch switchSexualActivity) {
    this.rootView = rootView;
    this.chipGroupFlow = chipGroupFlow;
    this.chipGroupMood = chipGroupMood;
    this.chipGroupSymptoms = chipGroupSymptoms;
    this.editTextNotes = editTextNotes;
    this.switchProtectedSex = switchProtectedSex;
    this.switchSexualActivity = switchSexualActivity;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddDailyCycleLogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddDailyCycleLogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_daily_cycle_log, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddDailyCycleLogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chipGroupFlow;
      ChipGroup chipGroupFlow = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupFlow == null) {
        break missingId;
      }

      id = R.id.chipGroupMood;
      ChipGroup chipGroupMood = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupMood == null) {
        break missingId;
      }

      id = R.id.chipGroupSymptoms;
      ChipGroup chipGroupSymptoms = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupSymptoms == null) {
        break missingId;
      }

      id = R.id.editTextNotes;
      TextInputEditText editTextNotes = ViewBindings.findChildViewById(rootView, id);
      if (editTextNotes == null) {
        break missingId;
      }

      id = R.id.switchProtectedSex;
      MaterialSwitch switchProtectedSex = ViewBindings.findChildViewById(rootView, id);
      if (switchProtectedSex == null) {
        break missingId;
      }

      id = R.id.switchSexualActivity;
      MaterialSwitch switchSexualActivity = ViewBindings.findChildViewById(rootView, id);
      if (switchSexualActivity == null) {
        break missingId;
      }

      return new DialogAddDailyCycleLogBinding((NestedScrollView) rootView, chipGroupFlow,
          chipGroupMood, chipGroupSymptoms, editTextNotes, switchProtectedSex,
          switchSexualActivity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
