// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAnalysisResultBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button buttonRetry;

  @NonNull
  public final MaterialButton buttonSavePdf;

  @NonNull
  public final MaterialButton buttonShare;

  @NonNull
  public final LinearLayout errorLayout;

  @NonNull
  public final LinearLayout loadingLayout;

  @NonNull
  public final RecyclerView recyclerViewAnalysis;

  @NonNull
  public final LinearLayout successLayout;

  @NonNull
  public final TextView textViewError;

  private FragmentAnalysisResultBinding(@NonNull ScrollView rootView, @NonNull Button buttonRetry,
      @NonNull MaterialButton buttonSavePdf, @NonNull MaterialButton buttonShare,
      @NonNull LinearLayout errorLayout, @NonNull LinearLayout loadingLayout,
      @NonNull RecyclerView recyclerViewAnalysis, @NonNull LinearLayout successLayout,
      @NonNull TextView textViewError) {
    this.rootView = rootView;
    this.buttonRetry = buttonRetry;
    this.buttonSavePdf = buttonSavePdf;
    this.buttonShare = buttonShare;
    this.errorLayout = errorLayout;
    this.loadingLayout = loadingLayout;
    this.recyclerViewAnalysis = recyclerViewAnalysis;
    this.successLayout = successLayout;
    this.textViewError = textViewError;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAnalysisResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAnalysisResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_analysis_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAnalysisResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonRetry;
      Button buttonRetry = ViewBindings.findChildViewById(rootView, id);
      if (buttonRetry == null) {
        break missingId;
      }

      id = R.id.buttonSavePdf;
      MaterialButton buttonSavePdf = ViewBindings.findChildViewById(rootView, id);
      if (buttonSavePdf == null) {
        break missingId;
      }

      id = R.id.buttonShare;
      MaterialButton buttonShare = ViewBindings.findChildViewById(rootView, id);
      if (buttonShare == null) {
        break missingId;
      }

      id = R.id.errorLayout;
      LinearLayout errorLayout = ViewBindings.findChildViewById(rootView, id);
      if (errorLayout == null) {
        break missingId;
      }

      id = R.id.loadingLayout;
      LinearLayout loadingLayout = ViewBindings.findChildViewById(rootView, id);
      if (loadingLayout == null) {
        break missingId;
      }

      id = R.id.recyclerViewAnalysis;
      RecyclerView recyclerViewAnalysis = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewAnalysis == null) {
        break missingId;
      }

      id = R.id.successLayout;
      LinearLayout successLayout = ViewBindings.findChildViewById(rootView, id);
      if (successLayout == null) {
        break missingId;
      }

      id = R.id.textViewError;
      TextView textViewError = ViewBindings.findChildViewById(rootView, id);
      if (textViewError == null) {
        break missingId;
      }

      return new FragmentAnalysisResultBinding((ScrollView) rootView, buttonRetry, buttonSavePdf,
          buttonShare, errorLayout, loadingLayout, recyclerViewAnalysis, successLayout,
          textViewError);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
