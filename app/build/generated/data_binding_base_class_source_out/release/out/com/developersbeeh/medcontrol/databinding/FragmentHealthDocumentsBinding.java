// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHealthDocumentsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Chip chipAll;

  @NonNull
  public final Chip chipExamImage;

  @NonNull
  public final Chip chipExamLab;

  @NonNull
  public final ChipGroup chipGroupFilter;

  @NonNull
  public final Chip chipOther;

  @NonNull
  public final Chip chipPrescription;

  @NonNull
  public final Chip chipReport;

  @NonNull
  public final LinearLayout contentLayout;

  @NonNull
  public final LayoutEmptyStateBinding emptyStateLayout;

  @NonNull
  public final FloatingActionButton fabAddDocument;

  @NonNull
  public final RecyclerView recyclerViewDocuments;

  private FragmentHealthDocumentsBinding(@NonNull CoordinatorLayout rootView, @NonNull Chip chipAll,
      @NonNull Chip chipExamImage, @NonNull Chip chipExamLab, @NonNull ChipGroup chipGroupFilter,
      @NonNull Chip chipOther, @NonNull Chip chipPrescription, @NonNull Chip chipReport,
      @NonNull LinearLayout contentLayout, @NonNull LayoutEmptyStateBinding emptyStateLayout,
      @NonNull FloatingActionButton fabAddDocument, @NonNull RecyclerView recyclerViewDocuments) {
    this.rootView = rootView;
    this.chipAll = chipAll;
    this.chipExamImage = chipExamImage;
    this.chipExamLab = chipExamLab;
    this.chipGroupFilter = chipGroupFilter;
    this.chipOther = chipOther;
    this.chipPrescription = chipPrescription;
    this.chipReport = chipReport;
    this.contentLayout = contentLayout;
    this.emptyStateLayout = emptyStateLayout;
    this.fabAddDocument = fabAddDocument;
    this.recyclerViewDocuments = recyclerViewDocuments;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHealthDocumentsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHealthDocumentsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_health_documents, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHealthDocumentsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chipAll;
      Chip chipAll = ViewBindings.findChildViewById(rootView, id);
      if (chipAll == null) {
        break missingId;
      }

      id = R.id.chipExamImage;
      Chip chipExamImage = ViewBindings.findChildViewById(rootView, id);
      if (chipExamImage == null) {
        break missingId;
      }

      id = R.id.chipExamLab;
      Chip chipExamLab = ViewBindings.findChildViewById(rootView, id);
      if (chipExamLab == null) {
        break missingId;
      }

      id = R.id.chipGroupFilter;
      ChipGroup chipGroupFilter = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupFilter == null) {
        break missingId;
      }

      id = R.id.chipOther;
      Chip chipOther = ViewBindings.findChildViewById(rootView, id);
      if (chipOther == null) {
        break missingId;
      }

      id = R.id.chipPrescription;
      Chip chipPrescription = ViewBindings.findChildViewById(rootView, id);
      if (chipPrescription == null) {
        break missingId;
      }

      id = R.id.chipReport;
      Chip chipReport = ViewBindings.findChildViewById(rootView, id);
      if (chipReport == null) {
        break missingId;
      }

      id = R.id.contentLayout;
      LinearLayout contentLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLayout == null) {
        break missingId;
      }

      id = R.id.emptyStateLayout;
      View emptyStateLayout = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateLayout == null) {
        break missingId;
      }
      LayoutEmptyStateBinding binding_emptyStateLayout = LayoutEmptyStateBinding.bind(emptyStateLayout);

      id = R.id.fabAddDocument;
      FloatingActionButton fabAddDocument = ViewBindings.findChildViewById(rootView, id);
      if (fabAddDocument == null) {
        break missingId;
      }

      id = R.id.recyclerViewDocuments;
      RecyclerView recyclerViewDocuments = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewDocuments == null) {
        break missingId;
      }

      return new FragmentHealthDocumentsBinding((CoordinatorLayout) rootView, chipAll,
          chipExamImage, chipExamLab, chipGroupFilter, chipOther, chipPrescription, chipReport,
          contentLayout, binding_emptyStateLayout, fabAddDocument, recyclerViewDocuments);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
