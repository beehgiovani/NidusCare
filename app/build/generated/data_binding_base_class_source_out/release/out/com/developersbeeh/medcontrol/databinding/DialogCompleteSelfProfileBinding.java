// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogCompleteSelfProfileBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final AutoCompleteTextView autoCompleteSexo;

  @NonNull
  public final AutoCompleteTextView autoCompleteTipoSanguineo;

  @NonNull
  public final TextInputEditText editTextAllergies;

  @NonNull
  public final TextInputEditText editTextAltura;

  @NonNull
  public final TextInputEditText editTextConditions;

  @NonNull
  public final TextInputEditText editTextDob;

  @NonNull
  public final TextInputEditText editTextWeight;

  @NonNull
  public final TextInputLayout tilAllergies;

  @NonNull
  public final TextInputLayout tilAltura;

  @NonNull
  public final TextInputLayout tilConditions;

  @NonNull
  public final TextInputLayout tilDob;

  @NonNull
  public final TextInputLayout tilSexo;

  @NonNull
  public final TextInputLayout tilTipoSanguineo;

  @NonNull
  public final TextInputLayout tilWeight;

  private DialogCompleteSelfProfileBinding(@NonNull ScrollView rootView,
      @NonNull AutoCompleteTextView autoCompleteSexo,
      @NonNull AutoCompleteTextView autoCompleteTipoSanguineo,
      @NonNull TextInputEditText editTextAllergies, @NonNull TextInputEditText editTextAltura,
      @NonNull TextInputEditText editTextConditions, @NonNull TextInputEditText editTextDob,
      @NonNull TextInputEditText editTextWeight, @NonNull TextInputLayout tilAllergies,
      @NonNull TextInputLayout tilAltura, @NonNull TextInputLayout tilConditions,
      @NonNull TextInputLayout tilDob, @NonNull TextInputLayout tilSexo,
      @NonNull TextInputLayout tilTipoSanguineo, @NonNull TextInputLayout tilWeight) {
    this.rootView = rootView;
    this.autoCompleteSexo = autoCompleteSexo;
    this.autoCompleteTipoSanguineo = autoCompleteTipoSanguineo;
    this.editTextAllergies = editTextAllergies;
    this.editTextAltura = editTextAltura;
    this.editTextConditions = editTextConditions;
    this.editTextDob = editTextDob;
    this.editTextWeight = editTextWeight;
    this.tilAllergies = tilAllergies;
    this.tilAltura = tilAltura;
    this.tilConditions = tilConditions;
    this.tilDob = tilDob;
    this.tilSexo = tilSexo;
    this.tilTipoSanguineo = tilTipoSanguineo;
    this.tilWeight = tilWeight;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogCompleteSelfProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogCompleteSelfProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_complete_self_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogCompleteSelfProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoCompleteSexo;
      AutoCompleteTextView autoCompleteSexo = ViewBindings.findChildViewById(rootView, id);
      if (autoCompleteSexo == null) {
        break missingId;
      }

      id = R.id.autoCompleteTipoSanguineo;
      AutoCompleteTextView autoCompleteTipoSanguineo = ViewBindings.findChildViewById(rootView, id);
      if (autoCompleteTipoSanguineo == null) {
        break missingId;
      }

      id = R.id.editTextAllergies;
      TextInputEditText editTextAllergies = ViewBindings.findChildViewById(rootView, id);
      if (editTextAllergies == null) {
        break missingId;
      }

      id = R.id.editTextAltura;
      TextInputEditText editTextAltura = ViewBindings.findChildViewById(rootView, id);
      if (editTextAltura == null) {
        break missingId;
      }

      id = R.id.editTextConditions;
      TextInputEditText editTextConditions = ViewBindings.findChildViewById(rootView, id);
      if (editTextConditions == null) {
        break missingId;
      }

      id = R.id.editTextDob;
      TextInputEditText editTextDob = ViewBindings.findChildViewById(rootView, id);
      if (editTextDob == null) {
        break missingId;
      }

      id = R.id.editTextWeight;
      TextInputEditText editTextWeight = ViewBindings.findChildViewById(rootView, id);
      if (editTextWeight == null) {
        break missingId;
      }

      id = R.id.tilAllergies;
      TextInputLayout tilAllergies = ViewBindings.findChildViewById(rootView, id);
      if (tilAllergies == null) {
        break missingId;
      }

      id = R.id.tilAltura;
      TextInputLayout tilAltura = ViewBindings.findChildViewById(rootView, id);
      if (tilAltura == null) {
        break missingId;
      }

      id = R.id.tilConditions;
      TextInputLayout tilConditions = ViewBindings.findChildViewById(rootView, id);
      if (tilConditions == null) {
        break missingId;
      }

      id = R.id.tilDob;
      TextInputLayout tilDob = ViewBindings.findChildViewById(rootView, id);
      if (tilDob == null) {
        break missingId;
      }

      id = R.id.tilSexo;
      TextInputLayout tilSexo = ViewBindings.findChildViewById(rootView, id);
      if (tilSexo == null) {
        break missingId;
      }

      id = R.id.tilTipoSanguineo;
      TextInputLayout tilTipoSanguineo = ViewBindings.findChildViewById(rootView, id);
      if (tilTipoSanguineo == null) {
        break missingId;
      }

      id = R.id.tilWeight;
      TextInputLayout tilWeight = ViewBindings.findChildViewById(rootView, id);
      if (tilWeight == null) {
        break missingId;
      }

      return new DialogCompleteSelfProfileBinding((ScrollView) rootView, autoCompleteSexo,
          autoCompleteTipoSanguineo, editTextAllergies, editTextAltura, editTextConditions,
          editTextDob, editTextWeight, tilAllergies, tilAltura, tilConditions, tilDob, tilSexo,
          tilTipoSanguineo, tilWeight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
