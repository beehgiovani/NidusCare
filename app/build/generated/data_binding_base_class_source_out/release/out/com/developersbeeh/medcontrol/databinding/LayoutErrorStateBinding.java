// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutErrorStateBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton buttonRetry;

  @NonNull
  public final LottieAnimationView lottieAnimationView;

  @NonNull
  public final TextView textViewErrorMessage;

  private LayoutErrorStateBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton buttonRetry, @NonNull LottieAnimationView lottieAnimationView,
      @NonNull TextView textViewErrorMessage) {
    this.rootView = rootView;
    this.buttonRetry = buttonRetry;
    this.lottieAnimationView = lottieAnimationView;
    this.textViewErrorMessage = textViewErrorMessage;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutErrorStateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutErrorStateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_error_state, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutErrorStateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonRetry;
      MaterialButton buttonRetry = ViewBindings.findChildViewById(rootView, id);
      if (buttonRetry == null) {
        break missingId;
      }

      id = R.id.lottieAnimationView;
      LottieAnimationView lottieAnimationView = ViewBindings.findChildViewById(rootView, id);
      if (lottieAnimationView == null) {
        break missingId;
      }

      id = R.id.textViewErrorMessage;
      TextView textViewErrorMessage = ViewBindings.findChildViewById(rootView, id);
      if (textViewErrorMessage == null) {
        break missingId;
      }

      return new LayoutErrorStateBinding((LinearLayout) rootView, buttonRetry, lottieAnimationView,
          textViewErrorMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
