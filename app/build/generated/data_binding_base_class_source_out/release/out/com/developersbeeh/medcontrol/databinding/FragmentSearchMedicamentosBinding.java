// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchMedicamentosBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Chip chipClasseTerapeutica;

  @NonNull
  public final ChipGroup chipGroup;

  @NonNull
  public final Chip chipNome;

  @NonNull
  public final Chip chipPrincipioAtivo;

  @NonNull
  public final EditText editTextSearch;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerViewMedicamentos;

  @NonNull
  public final TextView textViewResultados;

  private FragmentSearchMedicamentosBinding(@NonNull LinearLayout rootView,
      @NonNull Chip chipClasseTerapeutica, @NonNull ChipGroup chipGroup, @NonNull Chip chipNome,
      @NonNull Chip chipPrincipioAtivo, @NonNull EditText editTextSearch,
      @NonNull ProgressBar progressBar, @NonNull RecyclerView recyclerViewMedicamentos,
      @NonNull TextView textViewResultados) {
    this.rootView = rootView;
    this.chipClasseTerapeutica = chipClasseTerapeutica;
    this.chipGroup = chipGroup;
    this.chipNome = chipNome;
    this.chipPrincipioAtivo = chipPrincipioAtivo;
    this.editTextSearch = editTextSearch;
    this.progressBar = progressBar;
    this.recyclerViewMedicamentos = recyclerViewMedicamentos;
    this.textViewResultados = textViewResultados;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchMedicamentosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchMedicamentosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search_medicamentos, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchMedicamentosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chipClasseTerapeutica;
      Chip chipClasseTerapeutica = ViewBindings.findChildViewById(rootView, id);
      if (chipClasseTerapeutica == null) {
        break missingId;
      }

      id = R.id.chipGroup;
      ChipGroup chipGroup = ViewBindings.findChildViewById(rootView, id);
      if (chipGroup == null) {
        break missingId;
      }

      id = R.id.chipNome;
      Chip chipNome = ViewBindings.findChildViewById(rootView, id);
      if (chipNome == null) {
        break missingId;
      }

      id = R.id.chipPrincipioAtivo;
      Chip chipPrincipioAtivo = ViewBindings.findChildViewById(rootView, id);
      if (chipPrincipioAtivo == null) {
        break missingId;
      }

      id = R.id.editTextSearch;
      EditText editTextSearch = ViewBindings.findChildViewById(rootView, id);
      if (editTextSearch == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerViewMedicamentos;
      RecyclerView recyclerViewMedicamentos = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewMedicamentos == null) {
        break missingId;
      }

      id = R.id.textViewResultados;
      TextView textViewResultados = ViewBindings.findChildViewById(rootView, id);
      if (textViewResultados == null) {
        break missingId;
      }

      return new FragmentSearchMedicamentosBinding((LinearLayout) rootView, chipClasseTerapeutica,
          chipGroup, chipNome, chipPrincipioAtivo, editTextSearch, progressBar,
          recyclerViewMedicamentos, textViewResultados);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
