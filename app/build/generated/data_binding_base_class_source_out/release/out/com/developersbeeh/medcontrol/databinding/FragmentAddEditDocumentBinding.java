// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddEditDocumentBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final AutoCompleteTextView autoCompleteDocType;

  @NonNull
  public final MaterialButton buttonCancel;

  @NonNull
  public final MaterialButton buttonSave;

  @NonNull
  public final MaterialButton buttonSelectFile;

  @NonNull
  public final TextInputEditText editTextDocDate;

  @NonNull
  public final TextInputEditText editTextDocTitle;

  @NonNull
  public final TextInputEditText editTextDoctor;

  @NonNull
  public final TextInputEditText editTextLab;

  @NonNull
  public final TextInputEditText editTextNotes;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView textViewFileName;

  @NonNull
  public final TextView textViewTitle;

  @NonNull
  public final TextInputLayout tilDocDate;

  @NonNull
  public final TextInputLayout tilDocTitle;

  @NonNull
  public final TextInputLayout tilDocType;

  private FragmentAddEditDocumentBinding(@NonNull ScrollView rootView,
      @NonNull AutoCompleteTextView autoCompleteDocType, @NonNull MaterialButton buttonCancel,
      @NonNull MaterialButton buttonSave, @NonNull MaterialButton buttonSelectFile,
      @NonNull TextInputEditText editTextDocDate, @NonNull TextInputEditText editTextDocTitle,
      @NonNull TextInputEditText editTextDoctor, @NonNull TextInputEditText editTextLab,
      @NonNull TextInputEditText editTextNotes, @NonNull ProgressBar progressBar,
      @NonNull TextView textViewFileName, @NonNull TextView textViewTitle,
      @NonNull TextInputLayout tilDocDate, @NonNull TextInputLayout tilDocTitle,
      @NonNull TextInputLayout tilDocType) {
    this.rootView = rootView;
    this.autoCompleteDocType = autoCompleteDocType;
    this.buttonCancel = buttonCancel;
    this.buttonSave = buttonSave;
    this.buttonSelectFile = buttonSelectFile;
    this.editTextDocDate = editTextDocDate;
    this.editTextDocTitle = editTextDocTitle;
    this.editTextDoctor = editTextDoctor;
    this.editTextLab = editTextLab;
    this.editTextNotes = editTextNotes;
    this.progressBar = progressBar;
    this.textViewFileName = textViewFileName;
    this.textViewTitle = textViewTitle;
    this.tilDocDate = tilDocDate;
    this.tilDocTitle = tilDocTitle;
    this.tilDocType = tilDocType;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddEditDocumentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddEditDocumentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_edit_document, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddEditDocumentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoCompleteDocType;
      AutoCompleteTextView autoCompleteDocType = ViewBindings.findChildViewById(rootView, id);
      if (autoCompleteDocType == null) {
        break missingId;
      }

      id = R.id.buttonCancel;
      MaterialButton buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.buttonSave;
      MaterialButton buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.buttonSelectFile;
      MaterialButton buttonSelectFile = ViewBindings.findChildViewById(rootView, id);
      if (buttonSelectFile == null) {
        break missingId;
      }

      id = R.id.editTextDocDate;
      TextInputEditText editTextDocDate = ViewBindings.findChildViewById(rootView, id);
      if (editTextDocDate == null) {
        break missingId;
      }

      id = R.id.editTextDocTitle;
      TextInputEditText editTextDocTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTextDocTitle == null) {
        break missingId;
      }

      id = R.id.editTextDoctor;
      TextInputEditText editTextDoctor = ViewBindings.findChildViewById(rootView, id);
      if (editTextDoctor == null) {
        break missingId;
      }

      id = R.id.editTextLab;
      TextInputEditText editTextLab = ViewBindings.findChildViewById(rootView, id);
      if (editTextLab == null) {
        break missingId;
      }

      id = R.id.editTextNotes;
      TextInputEditText editTextNotes = ViewBindings.findChildViewById(rootView, id);
      if (editTextNotes == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.textViewFileName;
      TextView textViewFileName = ViewBindings.findChildViewById(rootView, id);
      if (textViewFileName == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      id = R.id.tilDocDate;
      TextInputLayout tilDocDate = ViewBindings.findChildViewById(rootView, id);
      if (tilDocDate == null) {
        break missingId;
      }

      id = R.id.tilDocTitle;
      TextInputLayout tilDocTitle = ViewBindings.findChildViewById(rootView, id);
      if (tilDocTitle == null) {
        break missingId;
      }

      id = R.id.tilDocType;
      TextInputLayout tilDocType = ViewBindings.findChildViewById(rootView, id);
      if (tilDocType == null) {
        break missingId;
      }

      return new FragmentAddEditDocumentBinding((ScrollView) rootView, autoCompleteDocType,
          buttonCancel, buttonSave, buttonSelectFile, editTextDocDate, editTextDocTitle,
          editTextDoctor, editTextLab, editTextNotes, progressBar, textViewFileName, textViewTitle,
          tilDocDate, tilDocTitle, tilDocType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
