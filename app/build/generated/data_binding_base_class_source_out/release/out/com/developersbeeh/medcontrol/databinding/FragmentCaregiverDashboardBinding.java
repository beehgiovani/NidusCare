// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.google.android.gms.ads.AdView;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCaregiverDashboardBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AdView adView;

  @NonNull
  public final Button buttonRetry;

  @NonNull
  public final MaterialCardView cardPendingInvites;

  @NonNull
  public final LinearLayout contentLayout;

  @NonNull
  public final LayoutEmptyStateBinding emptyStateLayout;

  @NonNull
  public final LinearLayout errorStateLayout;

  @NonNull
  public final FloatingActionButton fabAddDependent;

  @NonNull
  public final RecyclerView recyclerViewDependents;

  @NonNull
  public final RecyclerView recyclerViewPendingInvites;

  @NonNull
  public final ShimmerFrameLayout shimmerLayout;

  @NonNull
  public final MaterialCardView summaryCard;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final TextView textViewErrorMessage;

  @NonNull
  public final TextView textViewSummaryDosesLate;

  @NonNull
  public final TextView textViewSummaryDosesToday;

  @NonNull
  public final TextView textViewSummaryNextDose;

  private FragmentCaregiverDashboardBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AdView adView, @NonNull Button buttonRetry,
      @NonNull MaterialCardView cardPendingInvites, @NonNull LinearLayout contentLayout,
      @NonNull LayoutEmptyStateBinding emptyStateLayout, @NonNull LinearLayout errorStateLayout,
      @NonNull FloatingActionButton fabAddDependent, @NonNull RecyclerView recyclerViewDependents,
      @NonNull RecyclerView recyclerViewPendingInvites, @NonNull ShimmerFrameLayout shimmerLayout,
      @NonNull MaterialCardView summaryCard, @NonNull SwipeRefreshLayout swipeRefreshLayout,
      @NonNull TextView textViewErrorMessage, @NonNull TextView textViewSummaryDosesLate,
      @NonNull TextView textViewSummaryDosesToday, @NonNull TextView textViewSummaryNextDose) {
    this.rootView = rootView;
    this.adView = adView;
    this.buttonRetry = buttonRetry;
    this.cardPendingInvites = cardPendingInvites;
    this.contentLayout = contentLayout;
    this.emptyStateLayout = emptyStateLayout;
    this.errorStateLayout = errorStateLayout;
    this.fabAddDependent = fabAddDependent;
    this.recyclerViewDependents = recyclerViewDependents;
    this.recyclerViewPendingInvites = recyclerViewPendingInvites;
    this.shimmerLayout = shimmerLayout;
    this.summaryCard = summaryCard;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.textViewErrorMessage = textViewErrorMessage;
    this.textViewSummaryDosesLate = textViewSummaryDosesLate;
    this.textViewSummaryDosesToday = textViewSummaryDosesToday;
    this.textViewSummaryNextDose = textViewSummaryNextDose;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCaregiverDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCaregiverDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_caregiver_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCaregiverDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adView;
      AdView adView = ViewBindings.findChildViewById(rootView, id);
      if (adView == null) {
        break missingId;
      }

      id = R.id.buttonRetry;
      Button buttonRetry = ViewBindings.findChildViewById(rootView, id);
      if (buttonRetry == null) {
        break missingId;
      }

      id = R.id.cardPendingInvites;
      MaterialCardView cardPendingInvites = ViewBindings.findChildViewById(rootView, id);
      if (cardPendingInvites == null) {
        break missingId;
      }

      id = R.id.contentLayout;
      LinearLayout contentLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLayout == null) {
        break missingId;
      }

      id = R.id.emptyStateLayout;
      View emptyStateLayout = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateLayout == null) {
        break missingId;
      }
      LayoutEmptyStateBinding binding_emptyStateLayout = LayoutEmptyStateBinding.bind(emptyStateLayout);

      id = R.id.errorStateLayout;
      LinearLayout errorStateLayout = ViewBindings.findChildViewById(rootView, id);
      if (errorStateLayout == null) {
        break missingId;
      }

      id = R.id.fabAddDependent;
      FloatingActionButton fabAddDependent = ViewBindings.findChildViewById(rootView, id);
      if (fabAddDependent == null) {
        break missingId;
      }

      id = R.id.recyclerViewDependents;
      RecyclerView recyclerViewDependents = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewDependents == null) {
        break missingId;
      }

      id = R.id.recyclerViewPendingInvites;
      RecyclerView recyclerViewPendingInvites = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewPendingInvites == null) {
        break missingId;
      }

      id = R.id.shimmerLayout;
      ShimmerFrameLayout shimmerLayout = ViewBindings.findChildViewById(rootView, id);
      if (shimmerLayout == null) {
        break missingId;
      }

      id = R.id.summaryCard;
      MaterialCardView summaryCard = ViewBindings.findChildViewById(rootView, id);
      if (summaryCard == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.textViewErrorMessage;
      TextView textViewErrorMessage = ViewBindings.findChildViewById(rootView, id);
      if (textViewErrorMessage == null) {
        break missingId;
      }

      id = R.id.textViewSummaryDosesLate;
      TextView textViewSummaryDosesLate = ViewBindings.findChildViewById(rootView, id);
      if (textViewSummaryDosesLate == null) {
        break missingId;
      }

      id = R.id.textViewSummaryDosesToday;
      TextView textViewSummaryDosesToday = ViewBindings.findChildViewById(rootView, id);
      if (textViewSummaryDosesToday == null) {
        break missingId;
      }

      id = R.id.textViewSummaryNextDose;
      TextView textViewSummaryNextDose = ViewBindings.findChildViewById(rootView, id);
      if (textViewSummaryNextDose == null) {
        break missingId;
      }

      return new FragmentCaregiverDashboardBinding((CoordinatorLayout) rootView, adView,
          buttonRetry, cardPendingInvites, contentLayout, binding_emptyStateLayout,
          errorStateLayout, fabAddDependent, recyclerViewDependents, recyclerViewPendingInvites,
          shimmerLayout, summaryCard, swipeRefreshLayout, textViewErrorMessage,
          textViewSummaryDosesLate, textViewSummaryDosesToday, textViewSummaryNextDose);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
