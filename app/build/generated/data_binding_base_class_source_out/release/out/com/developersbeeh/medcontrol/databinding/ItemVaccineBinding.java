// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemVaccineBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton buttonRegister;

  @NonNull
  public final TextView textViewDateTaken;

  @NonNull
  public final TextView textViewPrevents;

  @NonNull
  public final TextView textViewStatus;

  @NonNull
  public final TextView textViewVaccineDose;

  @NonNull
  public final TextView textViewVaccineName;

  private ItemVaccineBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton buttonRegister, @NonNull TextView textViewDateTaken,
      @NonNull TextView textViewPrevents, @NonNull TextView textViewStatus,
      @NonNull TextView textViewVaccineDose, @NonNull TextView textViewVaccineName) {
    this.rootView = rootView;
    this.buttonRegister = buttonRegister;
    this.textViewDateTaken = textViewDateTaken;
    this.textViewPrevents = textViewPrevents;
    this.textViewStatus = textViewStatus;
    this.textViewVaccineDose = textViewVaccineDose;
    this.textViewVaccineName = textViewVaccineName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemVaccineBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemVaccineBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_vaccine, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemVaccineBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonRegister;
      MaterialButton buttonRegister = ViewBindings.findChildViewById(rootView, id);
      if (buttonRegister == null) {
        break missingId;
      }

      id = R.id.textViewDateTaken;
      TextView textViewDateTaken = ViewBindings.findChildViewById(rootView, id);
      if (textViewDateTaken == null) {
        break missingId;
      }

      id = R.id.textViewPrevents;
      TextView textViewPrevents = ViewBindings.findChildViewById(rootView, id);
      if (textViewPrevents == null) {
        break missingId;
      }

      id = R.id.textViewStatus;
      TextView textViewStatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewStatus == null) {
        break missingId;
      }

      id = R.id.textViewVaccineDose;
      TextView textViewVaccineDose = ViewBindings.findChildViewById(rootView, id);
      if (textViewVaccineDose == null) {
        break missingId;
      }

      id = R.id.textViewVaccineName;
      TextView textViewVaccineName = ViewBindings.findChildViewById(rootView, id);
      if (textViewVaccineName == null) {
        break missingId;
      }

      return new ItemVaccineBinding((MaterialCardView) rootView, buttonRegister, textViewDateTaken,
          textViewPrevents, textViewStatus, textViewVaccineDose, textViewVaccineName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
