// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MedicamentoDatabaseItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView textViewClasseTerapeutica;

  @NonNull
  public final TextView textViewMedicamentoNome;

  @NonNull
  public final TextView textViewPrincipioAtivo;

  private MedicamentoDatabaseItemBinding(@NonNull MaterialCardView rootView,
      @NonNull TextView textViewClasseTerapeutica, @NonNull TextView textViewMedicamentoNome,
      @NonNull TextView textViewPrincipioAtivo) {
    this.rootView = rootView;
    this.textViewClasseTerapeutica = textViewClasseTerapeutica;
    this.textViewMedicamentoNome = textViewMedicamentoNome;
    this.textViewPrincipioAtivo = textViewPrincipioAtivo;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static MedicamentoDatabaseItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MedicamentoDatabaseItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.medicamento_database_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MedicamentoDatabaseItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.textViewClasseTerapeutica;
      TextView textViewClasseTerapeutica = ViewBindings.findChildViewById(rootView, id);
      if (textViewClasseTerapeutica == null) {
        break missingId;
      }

      id = R.id.textViewMedicamentoNome;
      TextView textViewMedicamentoNome = ViewBindings.findChildViewById(rootView, id);
      if (textViewMedicamentoNome == null) {
        break missingId;
      }

      id = R.id.textViewPrincipioAtivo;
      TextView textViewPrincipioAtivo = ViewBindings.findChildViewById(rootView, id);
      if (textViewPrincipioAtivo == null) {
        break missingId;
      }

      return new MedicamentoDatabaseItemBinding((MaterialCardView) rootView,
          textViewClasseTerapeutica, textViewMedicamentoNome, textViewPrincipioAtivo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
