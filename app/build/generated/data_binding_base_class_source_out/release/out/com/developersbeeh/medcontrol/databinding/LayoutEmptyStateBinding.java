// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutEmptyStateBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton buttonEmptyAction;

  @NonNull
  public final LottieAnimationView lottieAnimationView;

  @NonNull
  public final TextView textViewEmptySubtitle;

  @NonNull
  public final TextView textViewEmptyTitle;

  private LayoutEmptyStateBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton buttonEmptyAction, @NonNull LottieAnimationView lottieAnimationView,
      @NonNull TextView textViewEmptySubtitle, @NonNull TextView textViewEmptyTitle) {
    this.rootView = rootView;
    this.buttonEmptyAction = buttonEmptyAction;
    this.lottieAnimationView = lottieAnimationView;
    this.textViewEmptySubtitle = textViewEmptySubtitle;
    this.textViewEmptyTitle = textViewEmptyTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutEmptyStateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutEmptyStateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_empty_state, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutEmptyStateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonEmptyAction;
      MaterialButton buttonEmptyAction = ViewBindings.findChildViewById(rootView, id);
      if (buttonEmptyAction == null) {
        break missingId;
      }

      id = R.id.lottieAnimationView;
      LottieAnimationView lottieAnimationView = ViewBindings.findChildViewById(rootView, id);
      if (lottieAnimationView == null) {
        break missingId;
      }

      id = R.id.textViewEmptySubtitle;
      TextView textViewEmptySubtitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewEmptySubtitle == null) {
        break missingId;
      }

      id = R.id.textViewEmptyTitle;
      TextView textViewEmptyTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewEmptyTitle == null) {
        break missingId;
      }

      return new LayoutEmptyStateBinding((LinearLayout) rootView, buttonEmptyAction,
          lottieAnimationView, textViewEmptySubtitle, textViewEmptyTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
