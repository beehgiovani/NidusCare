// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.google.android.gms.ads.AdView;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTimelineBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AdView adView;

  @NonNull
  public final Chip chipFilterAll;

  @NonNull
  public final Chip chipFilterDoses;

  @NonNull
  public final Chip chipFilterInsights;

  @NonNull
  public final Chip chipFilterNotes;

  @NonNull
  public final Chip chipFilterOtherActivities;

  @NonNull
  public final ChipGroup chipGroupFilter;

  @NonNull
  public final View divider;

  @NonNull
  public final LayoutEmptyStateBinding emptyStateLayout;

  @NonNull
  public final HorizontalScrollView filtersScrollView;

  @NonNull
  public final RecyclerView recyclerViewTimeline;

  @NonNull
  public final ShimmerFrameLayout shimmerLayout;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  private FragmentTimelineBinding(@NonNull ConstraintLayout rootView, @NonNull AdView adView,
      @NonNull Chip chipFilterAll, @NonNull Chip chipFilterDoses, @NonNull Chip chipFilterInsights,
      @NonNull Chip chipFilterNotes, @NonNull Chip chipFilterOtherActivities,
      @NonNull ChipGroup chipGroupFilter, @NonNull View divider,
      @NonNull LayoutEmptyStateBinding emptyStateLayout,
      @NonNull HorizontalScrollView filtersScrollView, @NonNull RecyclerView recyclerViewTimeline,
      @NonNull ShimmerFrameLayout shimmerLayout, @NonNull SwipeRefreshLayout swipeRefreshLayout) {
    this.rootView = rootView;
    this.adView = adView;
    this.chipFilterAll = chipFilterAll;
    this.chipFilterDoses = chipFilterDoses;
    this.chipFilterInsights = chipFilterInsights;
    this.chipFilterNotes = chipFilterNotes;
    this.chipFilterOtherActivities = chipFilterOtherActivities;
    this.chipGroupFilter = chipGroupFilter;
    this.divider = divider;
    this.emptyStateLayout = emptyStateLayout;
    this.filtersScrollView = filtersScrollView;
    this.recyclerViewTimeline = recyclerViewTimeline;
    this.shimmerLayout = shimmerLayout;
    this.swipeRefreshLayout = swipeRefreshLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTimelineBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTimelineBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_timeline, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTimelineBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adView;
      AdView adView = ViewBindings.findChildViewById(rootView, id);
      if (adView == null) {
        break missingId;
      }

      id = R.id.chipFilterAll;
      Chip chipFilterAll = ViewBindings.findChildViewById(rootView, id);
      if (chipFilterAll == null) {
        break missingId;
      }

      id = R.id.chipFilterDoses;
      Chip chipFilterDoses = ViewBindings.findChildViewById(rootView, id);
      if (chipFilterDoses == null) {
        break missingId;
      }

      id = R.id.chipFilterInsights;
      Chip chipFilterInsights = ViewBindings.findChildViewById(rootView, id);
      if (chipFilterInsights == null) {
        break missingId;
      }

      id = R.id.chipFilterNotes;
      Chip chipFilterNotes = ViewBindings.findChildViewById(rootView, id);
      if (chipFilterNotes == null) {
        break missingId;
      }

      id = R.id.chipFilterOtherActivities;
      Chip chipFilterOtherActivities = ViewBindings.findChildViewById(rootView, id);
      if (chipFilterOtherActivities == null) {
        break missingId;
      }

      id = R.id.chipGroupFilter;
      ChipGroup chipGroupFilter = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupFilter == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.emptyStateLayout;
      View emptyStateLayout = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateLayout == null) {
        break missingId;
      }
      LayoutEmptyStateBinding binding_emptyStateLayout = LayoutEmptyStateBinding.bind(emptyStateLayout);

      id = R.id.filtersScrollView;
      HorizontalScrollView filtersScrollView = ViewBindings.findChildViewById(rootView, id);
      if (filtersScrollView == null) {
        break missingId;
      }

      id = R.id.recyclerViewTimeline;
      RecyclerView recyclerViewTimeline = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewTimeline == null) {
        break missingId;
      }

      id = R.id.shimmer_layout;
      ShimmerFrameLayout shimmerLayout = ViewBindings.findChildViewById(rootView, id);
      if (shimmerLayout == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      return new FragmentTimelineBinding((ConstraintLayout) rootView, adView, chipFilterAll,
          chipFilterDoses, chipFilterInsights, chipFilterNotes, chipFilterOtherActivities,
          chipGroupFilter, divider, binding_emptyStateLayout, filtersScrollView,
          recyclerViewTimeline, shimmerLayout, swipeRefreshLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
