// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.github.mikephil.charting.charts.BarChart;
import com.github.mikephil.charting.charts.LineChart;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMedicationAnalyticsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cardDailySummary;

  @NonNull
  public final MaterialCardView cardMonthlyAdherence;

  @NonNull
  public final MaterialCardView cardSporadicStats;

  @NonNull
  public final MaterialCardView cardVariableDoseStats;

  @NonNull
  public final MaterialCardView cardWeeklyAdherence;

  @NonNull
  public final LineChart chartMonthlyAdherence;

  @NonNull
  public final BarChart chartWeeklyAdherence;

  @NonNull
  public final LinearLayout emptyStateLayout;

  @NonNull
  public final LinearLayout linearLayoutSporadicStats;

  @NonNull
  public final LinearLayout linearLayoutVariableDoseStats;

  @NonNull
  public final LinearProgressIndicator progressBarDaily;

  @NonNull
  public final ScrollView scrollViewAnalytics;

  @NonNull
  public final TextView textViewDailySummary;

  private FragmentMedicationAnalyticsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cardDailySummary, @NonNull MaterialCardView cardMonthlyAdherence,
      @NonNull MaterialCardView cardSporadicStats, @NonNull MaterialCardView cardVariableDoseStats,
      @NonNull MaterialCardView cardWeeklyAdherence, @NonNull LineChart chartMonthlyAdherence,
      @NonNull BarChart chartWeeklyAdherence, @NonNull LinearLayout emptyStateLayout,
      @NonNull LinearLayout linearLayoutSporadicStats,
      @NonNull LinearLayout linearLayoutVariableDoseStats,
      @NonNull LinearProgressIndicator progressBarDaily, @NonNull ScrollView scrollViewAnalytics,
      @NonNull TextView textViewDailySummary) {
    this.rootView = rootView;
    this.cardDailySummary = cardDailySummary;
    this.cardMonthlyAdherence = cardMonthlyAdherence;
    this.cardSporadicStats = cardSporadicStats;
    this.cardVariableDoseStats = cardVariableDoseStats;
    this.cardWeeklyAdherence = cardWeeklyAdherence;
    this.chartMonthlyAdherence = chartMonthlyAdherence;
    this.chartWeeklyAdherence = chartWeeklyAdherence;
    this.emptyStateLayout = emptyStateLayout;
    this.linearLayoutSporadicStats = linearLayoutSporadicStats;
    this.linearLayoutVariableDoseStats = linearLayoutVariableDoseStats;
    this.progressBarDaily = progressBarDaily;
    this.scrollViewAnalytics = scrollViewAnalytics;
    this.textViewDailySummary = textViewDailySummary;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMedicationAnalyticsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMedicationAnalyticsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_medication_analytics, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMedicationAnalyticsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardDailySummary;
      MaterialCardView cardDailySummary = ViewBindings.findChildViewById(rootView, id);
      if (cardDailySummary == null) {
        break missingId;
      }

      id = R.id.cardMonthlyAdherence;
      MaterialCardView cardMonthlyAdherence = ViewBindings.findChildViewById(rootView, id);
      if (cardMonthlyAdherence == null) {
        break missingId;
      }

      id = R.id.cardSporadicStats;
      MaterialCardView cardSporadicStats = ViewBindings.findChildViewById(rootView, id);
      if (cardSporadicStats == null) {
        break missingId;
      }

      id = R.id.cardVariableDoseStats;
      MaterialCardView cardVariableDoseStats = ViewBindings.findChildViewById(rootView, id);
      if (cardVariableDoseStats == null) {
        break missingId;
      }

      id = R.id.cardWeeklyAdherence;
      MaterialCardView cardWeeklyAdherence = ViewBindings.findChildViewById(rootView, id);
      if (cardWeeklyAdherence == null) {
        break missingId;
      }

      id = R.id.chartMonthlyAdherence;
      LineChart chartMonthlyAdherence = ViewBindings.findChildViewById(rootView, id);
      if (chartMonthlyAdherence == null) {
        break missingId;
      }

      id = R.id.chartWeeklyAdherence;
      BarChart chartWeeklyAdherence = ViewBindings.findChildViewById(rootView, id);
      if (chartWeeklyAdherence == null) {
        break missingId;
      }

      id = R.id.emptyStateLayout;
      LinearLayout emptyStateLayout = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateLayout == null) {
        break missingId;
      }

      id = R.id.linearLayoutSporadicStats;
      LinearLayout linearLayoutSporadicStats = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutSporadicStats == null) {
        break missingId;
      }

      id = R.id.linearLayoutVariableDoseStats;
      LinearLayout linearLayoutVariableDoseStats = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutVariableDoseStats == null) {
        break missingId;
      }

      id = R.id.progressBarDaily;
      LinearProgressIndicator progressBarDaily = ViewBindings.findChildViewById(rootView, id);
      if (progressBarDaily == null) {
        break missingId;
      }

      id = R.id.scrollViewAnalytics;
      ScrollView scrollViewAnalytics = ViewBindings.findChildViewById(rootView, id);
      if (scrollViewAnalytics == null) {
        break missingId;
      }

      id = R.id.textViewDailySummary;
      TextView textViewDailySummary = ViewBindings.findChildViewById(rootView, id);
      if (textViewDailySummary == null) {
        break missingId;
      }

      return new FragmentMedicationAnalyticsBinding((ConstraintLayout) rootView, cardDailySummary,
          cardMonthlyAdherence, cardSporadicStats, cardVariableDoseStats, cardWeeklyAdherence,
          chartMonthlyAdherence, chartWeeklyAdherence, emptyStateLayout, linearLayoutSporadicStats,
          linearLayoutVariableDoseStats, progressBarDaily, scrollViewAnalytics,
          textViewDailySummary);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
