// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHealthScheduleBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout contentLayout;

  @NonNull
  public final LayoutEmptyStateBinding emptyStateLayout;

  @NonNull
  public final FloatingActionButton fabAddSchedule;

  @NonNull
  public final CircularProgressIndicator progressBar;

  @NonNull
  public final RecyclerView recyclerViewSchedule;

  private FragmentHealthScheduleBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout contentLayout, @NonNull LayoutEmptyStateBinding emptyStateLayout,
      @NonNull FloatingActionButton fabAddSchedule, @NonNull CircularProgressIndicator progressBar,
      @NonNull RecyclerView recyclerViewSchedule) {
    this.rootView = rootView;
    this.contentLayout = contentLayout;
    this.emptyStateLayout = emptyStateLayout;
    this.fabAddSchedule = fabAddSchedule;
    this.progressBar = progressBar;
    this.recyclerViewSchedule = recyclerViewSchedule;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHealthScheduleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHealthScheduleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_health_schedule, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHealthScheduleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contentLayout;
      LinearLayout contentLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLayout == null) {
        break missingId;
      }

      id = R.id.emptyStateLayout;
      View emptyStateLayout = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateLayout == null) {
        break missingId;
      }
      LayoutEmptyStateBinding binding_emptyStateLayout = LayoutEmptyStateBinding.bind(emptyStateLayout);

      id = R.id.fabAddSchedule;
      FloatingActionButton fabAddSchedule = ViewBindings.findChildViewById(rootView, id);
      if (fabAddSchedule == null) {
        break missingId;
      }

      id = R.id.progressBar;
      CircularProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerViewSchedule;
      RecyclerView recyclerViewSchedule = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewSchedule == null) {
        break missingId;
      }

      return new FragmentHealthScheduleBinding((CoordinatorLayout) rootView, contentLayout,
          binding_emptyStateLayout, fabAddSchedule, progressBar, recyclerViewSchedule);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
