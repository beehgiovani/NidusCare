// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.chip.Chip;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFamilyMemberBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton buttonRemoveMember;

  @NonNull
  public final Chip chipOwner;

  @NonNull
  public final ShapeableImageView imageViewAvatar;

  @NonNull
  public final TextView textViewMemberEmail;

  @NonNull
  public final TextView textViewMemberName;

  private ItemFamilyMemberBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton buttonRemoveMember, @NonNull Chip chipOwner,
      @NonNull ShapeableImageView imageViewAvatar, @NonNull TextView textViewMemberEmail,
      @NonNull TextView textViewMemberName) {
    this.rootView = rootView;
    this.buttonRemoveMember = buttonRemoveMember;
    this.chipOwner = chipOwner;
    this.imageViewAvatar = imageViewAvatar;
    this.textViewMemberEmail = textViewMemberEmail;
    this.textViewMemberName = textViewMemberName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFamilyMemberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFamilyMemberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_family_member, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFamilyMemberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonRemoveMember;
      ImageButton buttonRemoveMember = ViewBindings.findChildViewById(rootView, id);
      if (buttonRemoveMember == null) {
        break missingId;
      }

      id = R.id.chipOwner;
      Chip chipOwner = ViewBindings.findChildViewById(rootView, id);
      if (chipOwner == null) {
        break missingId;
      }

      id = R.id.imageViewAvatar;
      ShapeableImageView imageViewAvatar = ViewBindings.findChildViewById(rootView, id);
      if (imageViewAvatar == null) {
        break missingId;
      }

      id = R.id.textViewMemberEmail;
      TextView textViewMemberEmail = ViewBindings.findChildViewById(rootView, id);
      if (textViewMemberEmail == null) {
        break missingId;
      }

      id = R.id.textViewMemberName;
      TextView textViewMemberName = ViewBindings.findChildViewById(rootView, id);
      if (textViewMemberName == null) {
        break missingId;
      }

      return new ItemFamilyMemberBinding((LinearLayout) rootView, buttonRemoveMember, chipOwner,
          imageViewAvatar, textViewMemberEmail, textViewMemberName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
