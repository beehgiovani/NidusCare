// Generated by view binder compiler. Do not edit!
package com.developersbeeh.medcontrol.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developersbeeh.medcontrol.R;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutDependentPermissionsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SwitchMaterial switchCanAddDocuments;

  @NonNull
  public final SwitchMaterial switchCanRegisterDose;

  @NonNull
  public final SwitchMaterial switchCanRegisterNotes;

  @NonNull
  public final SwitchMaterial switchCanSeeAgenda;

  @NonNull
  public final SwitchMaterial switchCanSeeDocuments;

  private LayoutDependentPermissionsBinding(@NonNull LinearLayout rootView,
      @NonNull SwitchMaterial switchCanAddDocuments, @NonNull SwitchMaterial switchCanRegisterDose,
      @NonNull SwitchMaterial switchCanRegisterNotes, @NonNull SwitchMaterial switchCanSeeAgenda,
      @NonNull SwitchMaterial switchCanSeeDocuments) {
    this.rootView = rootView;
    this.switchCanAddDocuments = switchCanAddDocuments;
    this.switchCanRegisterDose = switchCanRegisterDose;
    this.switchCanRegisterNotes = switchCanRegisterNotes;
    this.switchCanSeeAgenda = switchCanSeeAgenda;
    this.switchCanSeeDocuments = switchCanSeeDocuments;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutDependentPermissionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutDependentPermissionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_dependent_permissions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutDependentPermissionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.switchCanAddDocuments;
      SwitchMaterial switchCanAddDocuments = ViewBindings.findChildViewById(rootView, id);
      if (switchCanAddDocuments == null) {
        break missingId;
      }

      id = R.id.switchCanRegisterDose;
      SwitchMaterial switchCanRegisterDose = ViewBindings.findChildViewById(rootView, id);
      if (switchCanRegisterDose == null) {
        break missingId;
      }

      id = R.id.switchCanRegisterNotes;
      SwitchMaterial switchCanRegisterNotes = ViewBindings.findChildViewById(rootView, id);
      if (switchCanRegisterNotes == null) {
        break missingId;
      }

      id = R.id.switchCanSeeAgenda;
      SwitchMaterial switchCanSeeAgenda = ViewBindings.findChildViewById(rootView, id);
      if (switchCanSeeAgenda == null) {
        break missingId;
      }

      id = R.id.switchCanSeeDocuments;
      SwitchMaterial switchCanSeeDocuments = ViewBindings.findChildViewById(rootView, id);
      if (switchCanSeeDocuments == null) {
        break missingId;
      }

      return new LayoutDependentPermissionsBinding((LinearLayout) rootView, switchCanAddDocuments,
          switchCanRegisterDose, switchCanRegisterNotes, switchCanSeeAgenda, switchCanSeeDocuments);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
